{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\CarTypes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { features, language } from 'config';\nimport { FirebaseContext } from 'common';\nexport default function CarTypes() {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    editCarType\n  } = api;\n  const columns = [{\n    title: language.image,\n    field: 'image',\n    render: rowData => /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Car\",\n      src: rowData.image,\n      style: {\n        width: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 65\n      }\n    })\n  }, {\n    title: language.name,\n    field: 'name'\n  }, {\n    title: language.base_fare,\n    field: 'base_fare',\n    type: 'numeric'\n  }, {\n    title: language.rate_per_unit_distance,\n    field: 'rate_per_unit_distance',\n    type: 'numeric'\n  }, {\n    title: language.rate_per_hour,\n    field: 'rate_per_hour',\n    type: 'numeric'\n  }, {\n    title: language.min_fare,\n    field: 'min_fare',\n    type: 'numeric'\n  }, {\n    title: language.convenience_fee,\n    field: 'convenience_fees',\n    type: 'numeric'\n  }, {\n    title: language.convenience_fee_type,\n    field: 'convenience_fee_type',\n    lookup: {\n      flat: language.flat,\n      percentage: language.percentage\n    }\n  }, {\n    title: language.extra_info,\n    field: 'extra_info'\n  }];\n  const [data, setData] = useState([]);\n  const cartypes = useSelector(state => state.cartypes);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (cartypes.cars) {\n      setData(cartypes.cars);\n    } else {\n      setData([]);\n    }\n  }, [cartypes.cars]);\n  return cartypes.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.car_type,\n    columns: columns,\n    data: data,\n    options: {\n      exportButton: true\n    },\n    editable: {\n      onRowAdd: newData => features.AllowCriticalEditsAdmin ? new Promise(resolve => {\n        setTimeout(() => {\n          newData['createdAt'] = new Date().toISOString();\n          dispatch(editCarType(newData, \"Add\"));\n          resolve();\n        }, 600);\n      }) : new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          alert(language.demo_mode);\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => features.AllowCriticalEditsAdmin ? new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(editCarType(newData, \"Update\"));\n        }, 600);\n      }) : new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          alert(language.demo_mode);\n        }, 600);\n      }),\n      onRowDelete: oldData => features.AllowCriticalEditsAdmin ? new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(editCarType(oldData, \"Delete\"));\n        }, 600);\n      }) : new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          alert(language.demo_mode);\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  });\n}\n\n_s(CarTypes, \"ohyCQkd6wg2f7g5JQTVGpYoWZKM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CarTypes;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarTypes\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/CarTypes.js"],"names":["React","useState","useEffect","useContext","MaterialTable","useSelector","useDispatch","CircularLoading","features","language","FirebaseContext","CarTypes","api","editCarType","columns","title","image","field","render","rowData","width","name","base_fare","type","rate_per_unit_distance","rate_per_hour","min_fare","convenience_fee","convenience_fee_type","lookup","flat","percentage","extra_info","data","setData","cartypes","state","dispatch","cars","loading","car_type","exportButton","onRowAdd","newData","AllowCriticalEditsAdmin","Promise","resolve","setTimeout","Date","toISOString","alert","demo_mode","onRowUpdate","oldData","onRowDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport {\n  features,\n  language\n} from 'config';\nimport { FirebaseContext } from 'common';\n\nexport default function CarTypes() {\n  const { api } = useContext(FirebaseContext);\n  const {\n    editCarType\n  } = api;\n  const columns = [\n    { title: language.image, field: 'image', render: rowData => <img alt='Car' src={rowData.image} style={{ width: 50 }} /> },\n    { title: language.name, field: 'name' },\n    { title: language.base_fare, field: 'base_fare', type: 'numeric' },\n    { title: language.rate_per_unit_distance, field: 'rate_per_unit_distance', type: 'numeric' },\n    { title: language.rate_per_hour, field: 'rate_per_hour', type: 'numeric' },\n    { title: language.min_fare, field: 'min_fare', type: 'numeric' },\n    { title: language.convenience_fee, field: 'convenience_fees', type: 'numeric' },\n    {\n      title: language.convenience_fee_type,\n      field: 'convenience_fee_type',\n      lookup: { flat: language.flat, percentage: language.percentage },\n    },\n    { title: language.extra_info, field: 'extra_info' }\n  ];\n  const [data, setData] = useState([]);\n  const cartypes = useSelector(state => state.cartypes);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cartypes.cars) {\n      setData(cartypes.cars);\n    } else {\n      setData([]);\n    }\n  }, [cartypes.cars]);\n\n  return (\n    cartypes.loading ? <CircularLoading /> :\n      <MaterialTable\n        title={language.car_type}\n        columns={columns}\n        data={data}\n        options={{\n          exportButton: true\n        }}\n        editable={{\n          onRowAdd: newData =>\n          features.AllowCriticalEditsAdmin?\n            new Promise(resolve => {\n              setTimeout(() => {\n                  newData['createdAt'] = new Date().toISOString();\n                  dispatch(editCarType(newData,\"Add\"));\n                  resolve();\n              }, 600);\n            })\n            :\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                alert(language.demo_mode);\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            features.AllowCriticalEditsAdmin?\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                dispatch(editCarType(newData,\"Update\"));\n              }, 600);\n            })\n            :\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                alert(language.demo_mode);\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            features.AllowCriticalEditsAdmin?\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                dispatch(editCarType(oldData,\"Delete\"));\n              }, 600);\n            })\n            :\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                alert(language.demo_mode);\n              }, 600);\n            })\n        }}\n      />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}