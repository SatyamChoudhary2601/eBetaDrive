{"ast":null,"code":"var _jsxFileName = \"D:\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\Drivers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { features, dateStyle, language } from 'config';\nimport { FirebaseContext } from 'common';\nexport default function Users() {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    addUser,\n    editUser,\n    deleteUser,\n    checkUserExists\n  } = api;\n  const [data, setData] = useState([]);\n  const [cars, setCars] = useState({});\n  const usersdata = useSelector(state => state.usersdata);\n  const cartypes = useSelector(state => state.cartypes);\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (usersdata.users) {\n      setData(usersdata.users.filter(user => user.usertype === 'driver' && (user.fleetadmin === auth.info.uid && auth.info.profile.usertype === 'fleetadmin' || auth.info.profile.usertype === 'admin')));\n    } else {\n      setData([]);\n    }\n  }, [usersdata.users, auth.info.profile.usertype, auth.info.uid]);\n  useEffect(() => {\n    if (cartypes.cars) {\n      let obj = {};\n      cartypes.cars.map(car => obj[car.name] = car.name);\n      setCars(obj);\n    }\n  }, [cartypes.cars]);\n  const columns = [{\n    title: language.createdAt,\n    field: 'createdAt',\n    editable: 'never',\n    defaultSort: 'desc',\n    render: rowData => rowData.createdAt ? new Date(rowData.createdAt).toLocaleString(dateStyle) : null\n  }, {\n    title: language.first_name,\n    field: 'firstName',\n    initialEditValue: ''\n  }, {\n    title: language.last_name,\n    field: 'lastName',\n    initialEditValue: ''\n  }, {\n    title: language.email,\n    field: 'email',\n    editable: 'onAdd',\n    render: rowData => features.AllowCriticalEditsAdmin ? rowData.email : \"Hidden for Demo\"\n  }, {\n    title: language.mobile,\n    field: 'mobile',\n    editable: 'onAdd',\n    render: rowData => features.AllowCriticalEditsAdmin ? rowData.mobile : \"Hidden for Demo\"\n  }, {\n    title: language.profile_image,\n    field: 'profile_image',\n    render: rowData => rowData.profile_image ? /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Profile\",\n      src: rowData.profile_image,\n      style: {\n        width: 50,\n        borderRadius: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 106\n      }\n    }) : null,\n    editable: 'never'\n  }, {\n    title: language.vehicle_model_name,\n    field: 'vehicleMake',\n    initialEditValue: ''\n  }, {\n    title: language.vehicle_model_no,\n    field: 'vehicleModel',\n    initialEditValue: ''\n  }, {\n    title: language.vehicle_reg_no,\n    field: 'vehicleNumber',\n    initialEditValue: ''\n  }, {\n    title: language.other_info,\n    field: 'other_info',\n    initialEditValue: ''\n  }, {\n    title: language.car_type,\n    field: 'carType',\n    lookup: cars\n  }, {\n    title: language.account_approve,\n    field: 'approved',\n    type: 'boolean',\n    initialEditValue: true\n  }, {\n    title: language.driver_active,\n    field: 'driverActiveStatus',\n    type: 'boolean',\n    initialEditValue: true\n  }, {\n    title: language.lisence_image,\n    field: 'licenseImage',\n    render: rowData => rowData.licenseImage ? /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"License\",\n      src: rowData.licenseImage,\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 103\n      }\n    }) : null,\n    editable: 'never'\n  }, {\n    title: language.wallet_balance,\n    field: 'walletBalance',\n    type: 'numeric',\n    editable: 'never',\n    initialEditValue: 0\n  }, {\n    title: language.signup_via_referral,\n    field: 'signupViaReferral',\n    editable: 'never'\n  }, {\n    title: language.referralId,\n    field: 'referralId',\n    editable: 'never',\n    initialEditValue: ''\n  }, {\n    title: language.bankName,\n    field: 'bankName',\n    initialEditValue: ''\n  }, {\n    title: language.bankCode,\n    field: 'bankCode',\n    initialEditValue: ''\n  }, {\n    title: language.bankAccount,\n    field: 'bankAccount',\n    initialEditValue: ''\n  }, {\n    title: language.queue,\n    field: 'queue',\n    type: 'boolean',\n    initialEditValue: false\n  }];\n  return usersdata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.drivers,\n    columns: columns,\n    data: data,\n    options: {\n      exportButton: features.AllowCriticalEditsAdmin,\n      sorting: true\n    },\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          checkUserExists(newData).then(res => {\n            if (res.users && res.users.length > 0) {\n              alert(language.user_exists);\n              reject();\n            } else if (res.error) {\n              alert(language.email_or_mobile_issue);\n              reject();\n            } else {\n              newData['createdByAdmin'] = true;\n              newData['usertype'] = 'driver';\n              newData['createdAt'] = new Date().toISOString();\n              newData['referralId'] = newData.firstName.toLowerCase() + Math.floor(1000 + Math.random() * 9000).toString();\n              let role = auth.info.profile.usertype;\n\n              if (role === 'fleetadmin') {\n                newData['fleetadmin'] = auth.info.uid;\n              }\n\n              dispatch(addUser(newData));\n              resolve();\n            }\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(editUser(oldData.id, newData));\n        }, 600);\n      }),\n      onRowDelete: oldData => features.AllowCriticalEditsAdmin ? new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(deleteUser(oldData.id));\n        }, 600);\n      }) : new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          alert(language.demo_mode);\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Users, \"PNtkErAo2YZnhWHGgjR//rUVaOQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/e beta react native/eBetaDrive/web-app/src/views/Drivers.js"],"names":["React","useState","useEffect","useContext","MaterialTable","useSelector","useDispatch","CircularLoading","features","dateStyle","language","FirebaseContext","Users","api","addUser","editUser","deleteUser","checkUserExists","data","setData","cars","setCars","usersdata","state","cartypes","auth","dispatch","users","filter","user","usertype","fleetadmin","info","uid","profile","obj","map","car","name","columns","title","createdAt","field","editable","defaultSort","render","rowData","Date","toLocaleString","first_name","initialEditValue","last_name","email","AllowCriticalEditsAdmin","mobile","profile_image","width","borderRadius","vehicle_model_name","vehicle_model_no","vehicle_reg_no","other_info","car_type","lookup","account_approve","type","driver_active","lisence_image","licenseImage","wallet_balance","signup_via_referral","referralId","bankName","bankCode","bankAccount","queue","loading","drivers","exportButton","sorting","onRowAdd","newData","Promise","resolve","reject","setTimeout","then","res","length","alert","user_exists","error","email_or_mobile_issue","toISOString","firstName","toLowerCase","Math","floor","random","toString","role","onRowUpdate","oldData","id","onRowDelete","demo_mode"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { \n  features ,\n  dateStyle,\n  language\n} from 'config';\nimport { FirebaseContext } from 'common';\n\nexport default function Users() {\n  const { api } = useContext(FirebaseContext);\n  const {\n    addUser,\n    editUser, \n    deleteUser,\n    checkUserExists\n  } = api;\n  const [data, setData] = useState([]);\n  const [cars, setCars] = useState({});\n  const usersdata = useSelector(state => state.usersdata);\n  const cartypes = useSelector(state => state.cartypes);\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    if(usersdata.users){\n        setData(usersdata.users.filter(user => user.usertype ==='driver' && ((user.fleetadmin === auth.info.uid && auth.info.profile.usertype === 'fleetadmin')|| auth.info.profile.usertype === 'admin')));\n    }else{\n      setData([]);\n    }\n  },[usersdata.users,auth.info.profile.usertype,auth.info.uid]);\n\n  useEffect(()=>{\n    if(cartypes.cars){\n        let obj =  {};\n        cartypes.cars.map((car)=> obj[car.name]=car.name)\n        setCars(obj);\n    }\n  },[cartypes.cars]);\n\n  const columns = [\n      { title: language.createdAt, field: 'createdAt', editable:'never', defaultSort:'desc',render: rowData => rowData.createdAt?new Date(rowData.createdAt).toLocaleString(dateStyle):null},\n      { title: language.first_name, field: 'firstName', initialEditValue: '' },\n      { title: language.last_name, field: 'lastName', initialEditValue: '' },\n      { title: language.email, field: 'email', editable:'onAdd',render: rowData => features.AllowCriticalEditsAdmin ? rowData.email : \"Hidden for Demo\"},\n      { title: language.mobile, field: 'mobile', editable:'onAdd',render: rowData => features.AllowCriticalEditsAdmin ? rowData.mobile : \"Hidden for Demo\"},\n      { title: language.profile_image,  field: 'profile_image', render: rowData => rowData.profile_image?<img alt='Profile' src={rowData.profile_image} style={{width: 50,borderRadius:'50%'}}/>:null, editable:'never'},\n      { title: language.vehicle_model_name, field: 'vehicleMake', initialEditValue: '' },\n      { title: language.vehicle_model_no, field: 'vehicleModel', initialEditValue: '' },\n      { title: language.vehicle_reg_no, field: 'vehicleNumber', initialEditValue: '' },\n      { title: language.other_info, field: 'other_info', initialEditValue: '' },\n      { title: language.car_type, field: 'carType',lookup: cars},\n      { title: language.account_approve,  field: 'approved', type:'boolean', initialEditValue: true },\n      { title: language.driver_active,  field: 'driverActiveStatus', type:'boolean', initialEditValue: true},\n      { title: language.lisence_image,  field: 'licenseImage',render: rowData => rowData.licenseImage?<img alt='License' src={rowData.licenseImage} style={{width: 100}}/>:null, editable:'never'},\n      { title: language.wallet_balance,  field: 'walletBalance', type:'numeric' , editable:'never', initialEditValue: 0},\n      { title: language.signup_via_referral, field: 'signupViaReferral', editable:'never' },\n      { title: language.referralId,  field: 'referralId', editable:'never', initialEditValue: '' },\n      { title: language.bankName,  field: 'bankName', initialEditValue: '' },\n      { title: language.bankCode,  field: 'bankCode', initialEditValue: '' },\n      { title: language.bankAccount,  field: 'bankAccount', initialEditValue: '' },\n      { title: language.queue,  field: 'queue', type:'boolean', initialEditValue: false },\n  ];\n\n  return (\n    usersdata.loading? <CircularLoading/>:\n    <MaterialTable\n      title={language.drivers}\n      columns={columns}\n      data={data}\n      options={{\n        exportButton: features.AllowCriticalEditsAdmin,\n        sorting: true,\n      }}\n      editable={{\n        onRowAdd: newData =>\n        new Promise((resolve,reject) => {\n          setTimeout(() => {\n            checkUserExists(newData).then((res) => {\n              if (res.users && res.users.length > 0) {\n                alert(language.user_exists);\n                reject();\n              }\n              else if(res.error){\n                alert(language.email_or_mobile_issue);\n                reject();\n              }\n              else{\n                newData['createdByAdmin'] = true;\n                newData['usertype'] = 'driver';\n                newData['createdAt'] = new Date().toISOString();\n                newData['referralId'] = newData.firstName.toLowerCase() + Math.floor(1000 + Math.random() * 9000).toString();\n                let role = auth.info.profile.usertype;\n                if(role === 'fleetadmin'){\n                  newData['fleetadmin'] = auth.info.uid; \n                }\n                dispatch(addUser(newData));\n                resolve();\n              }\n            });\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              dispatch(editUser(oldData.id,newData));\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          features.AllowCriticalEditsAdmin?\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              dispatch(deleteUser(oldData.id));\n            }, 600);\n          })\n          :\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              alert(language.demo_mode);\n            }, 600);\n          })\n          , \n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}