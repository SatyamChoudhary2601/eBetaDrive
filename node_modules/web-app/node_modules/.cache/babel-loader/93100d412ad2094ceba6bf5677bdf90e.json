{"ast":null,"code":"var _jsxFileName = \"D:\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\LandingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport classNames from \"classnames\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport { Paper, FormControl, Select, MenuItem, TextField } from '@material-ui/core';\nimport GoogleMapsAutoComplete from '../components/GoogleMapsAutoComplete';\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport ProductSection from \"./Sections/ProductSection.js\";\nimport SectionDownload from \"./Sections/SectionDownload.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AlertDialog from '../components/AlertDialog';\nimport { language } from 'config';\nimport { FirebaseContext } from 'common';\nconst dashboardRoutes = [];\nconst useStyles = makeStyles(styles);\nexport default function LandingPage(props) {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    getEstimate,\n    clearEstimate,\n    addBooking,\n    clearBooking,\n    MinutesPassed,\n    GetDateString\n  } = api;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { ...rest\n  } = props;\n  const cartypes = useSelector(state => state.cartypes.cars);\n  const estimatedata = useSelector(state => state.estimatedata);\n  const bookingdata = useSelector(state => state.bookingdata);\n  const settings = useSelector(state => state.settingsdata.settings);\n  const [carType, setCarType] = useState(language.select_car);\n  const [pickupAddress, setPickupAddress] = useState(null);\n  const [dropAddress, setDropAddress] = useState(null);\n  const [estimateModalStatus, setEstimateModalStatus] = React.useState(false);\n  const [selectedCarDetails, setSelectedCarDetails] = useState(null);\n  const auth = useSelector(state => state.auth);\n  const [commonAlert, setCommonAlert] = useState({\n    open: false,\n    msg: ''\n  });\n  const [bookingType, setBookingType] = useState('Book Now');\n  const [role, setRole] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(GetDateString());\n\n  const handleCarSelect = event => {\n    setCarType(event.target.value);\n    let carDetails = null;\n\n    for (let i = 0; i < cartypes.length; i++) {\n      if (cartypes[i].name === event.target.value) {\n        carDetails = cartypes[i];\n      }\n    }\n\n    setSelectedCarDetails(carDetails);\n  };\n\n  const handleBookTypeSelect = event => {\n    setBookingType(event.target.value);\n\n    if (bookingType === 'Book Later') {\n      setSelectedDate(GetDateString());\n    }\n  };\n\n  const onDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n\n  useEffect(() => {\n    if (estimatedata.estimate) {\n      setEstimateModalStatus(true);\n    }\n\n    if (auth.info && auth.info.profile) {\n      setRole(auth.info.profile.usertype);\n    }\n  }, [estimatedata.estimate, auth.info]);\n\n  const handleGetEstimate = e => {\n    e.preventDefault();\n\n    if (auth.info) {\n      if (pickupAddress && dropAddress && selectedCarDetails) {\n        const directionService = new window.google.maps.DirectionsService();\n        directionService.route({\n          origin: new window.google.maps.LatLng(pickupAddress.coords.lat, pickupAddress.coords.lng),\n          destination: new window.google.maps.LatLng(dropAddress.coords.lat, dropAddress.coords.lng),\n          travelMode: window.google.maps.TravelMode.DRIVING\n        }, (result, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK) {\n            const route = {\n              distance: result.routes[0].legs[0].distance.value / 1000,\n              duration: result.routes[0].legs[0].duration.value,\n              polylinePoints: result.routes[0].overview_polyline\n            };\n\n            if (bookingType === 'Book Now') {\n              dispatch(getEstimate({\n                pickup: pickupAddress,\n                drop: dropAddress,\n                carDetails: selectedCarDetails,\n                routeDetails: route\n              }));\n            } else {\n              if (bookingType === 'Book Later' && selectedDate) {\n                if (MinutesPassed(selectedDate) >= 15) {\n                  dispatch(getEstimate({\n                    pickup: pickupAddress,\n                    drop: dropAddress,\n                    carDetails: selectedCarDetails,\n                    routeDetails: route\n                  }));\n                } else {\n                  setCommonAlert({\n                    open: true,\n                    msg: language.past_booking_error\n                  });\n                }\n              } else {\n                setCommonAlert({\n                  open: true,\n                  msg: language.select_proper\n                });\n              }\n            }\n          } else {\n            setCommonAlert({\n              open: true,\n              msg: language.place_to_coords_error\n            });\n          }\n        });\n      } else {\n        setCommonAlert({\n          open: true,\n          msg: language.select_proper\n        });\n      }\n    } else {\n      setCommonAlert({\n        open: true,\n        msg: language.must_login\n      });\n    }\n  };\n\n  const confirmBooking = e => {\n    e.preventDefault();\n    setEstimateModalStatus(false);\n    dispatch(addBooking({\n      pickup: pickupAddress,\n      drop: dropAddress,\n      carDetails: selectedCarDetails,\n      userDetails: auth.info,\n      estimate: estimatedata.estimate,\n      tripdate: new Date(selectedDate).toString(),\n      bookLater: bookingType === 'Book Later' ? true : false,\n      settings: settings,\n      booking_type_web: true\n    }));\n  };\n\n  const handleEstimateModalClose = e => {\n    e.preventDefault();\n    setEstimateModalStatus(false);\n    dispatch(clearEstimate());\n  };\n\n  const handleEstimateErrorClose = e => {\n    e.preventDefault();\n    dispatch(clearEstimate());\n  };\n\n  const handleBookingAlertClose = e => {\n    e.preventDefault();\n    dispatch(clearBooking());\n    dispatch(clearEstimate());\n    props.history.push('/bookings');\n  };\n\n  const handleBookingErrorClose = e => {\n    e.preventDefault();\n    dispatch(clearBooking());\n  };\n\n  const handleCommonAlertClose = e => {\n    e.preventDefault();\n    setCommonAlert({\n      open: false,\n      msg: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"transparent\",\n    routes: dashboardRoutes,\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }),\n    fixed: true,\n    changeColorOnScroll: {\n      height: 400,\n      color: \"white\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Parallax, {\n    filter: true,\n    image: require(\"assets/img/background.jpg\").default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, cartypes && !role || cartypes && (role === 'rider' || role === 'admin') ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, language.book_your_cab))), /*#__PURE__*/React.createElement(GridContainer, {\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapsAutoComplete, {\n    placeholder: language.pickup_location,\n    variant: \"filled\",\n    value: pickupAddress,\n    onChange: value => {\n      setPickupAddress(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(GridContainer, {\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapsAutoComplete, {\n    placeholder: language.drop_location,\n    variant: \"filled\",\n    value: dropAddress,\n    onChange: value => {\n      setDropAddress(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(GridContainer, {\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 6,\n    sm: 6,\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"car-type-native\",\n    value: carType,\n    onChange: handleCarSelect,\n    className: carType === language.select_car ? classes.inputdimmed : classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: language.select_car,\n    key: language.select_car,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, language.select_car), cartypes.map(car => /*#__PURE__*/React.createElement(MenuItem, {\n    key: car.name,\n    value: car.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: car.image,\n    className: classes.carphoto,\n    alt: \"car types\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 27\n    }\n  }), car.name))))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 6,\n    sm: 6,\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"booking-type-native\",\n    value: bookingType,\n    onChange: handleBookTypeSelect,\n    className: classes.input,\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"Book Now\",\n    value: \"Book Now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, language.book_now), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"Book Later\",\n    value: \"Book Later\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, language.book_later))))), /*#__PURE__*/React.createElement(GridContainer, {\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, bookingType === 'Book Later' ? /*#__PURE__*/React.createElement(GridItem, {\n    xs: 6,\n    sm: 6,\n    md: 4,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"datetime-local\",\n    label: language.booking_date_time,\n    type: \"datetime-local\",\n    variant: \"filled\",\n    fullWidth: true,\n    className: classes.commonInputStyle,\n    InputProps: {\n      className: classes.input\n    },\n    value: selectedDate,\n    onChange: onDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  })) : null, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 6,\n    sm: 6,\n    md: bookingType === 'Book Later' ? 2 : 6,\n    lg: bookingType === 'Book Later' ? 2 : 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    size: \"lg\",\n    rel: \"noopener noreferrer\",\n    className: classes.items,\n    onClick: handleGetEstimate,\n    style: {\n      height: bookingType === 'Book Later' ? 76 : 52\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-car\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }), language.book_now)))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, language.landing_slogan))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProductSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.main2, classes.mainRaised2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionDownload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: estimateModalStatus,\n    onClose: handleEstimateModalClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, language.estimate), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, settings ? settings.symbol : null, \" \", estimatedata.estimate ? estimatedata.estimate.estimateFare : null)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleEstimateModalClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, language.cancel), /*#__PURE__*/React.createElement(Button, {\n    onClick: confirmBooking,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, language.book))), /*#__PURE__*/React.createElement(AlertDialog, {\n    open: bookingdata.booking ? true : false,\n    onClose: handleBookingAlertClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, bookingdata.booking ? language.booking_success + bookingdata.booking.booking_id : null), /*#__PURE__*/React.createElement(AlertDialog, {\n    open: bookingdata.error.flag,\n    onClose: handleBookingErrorClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, bookingdata.error.msg), /*#__PURE__*/React.createElement(AlertDialog, {\n    open: estimatedata.error.flag,\n    onClose: handleEstimateErrorClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }\n  }, estimatedata.error.msg), /*#__PURE__*/React.createElement(AlertDialog, {\n    open: commonAlert.open,\n    onClose: handleCommonAlertClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }, commonAlert.msg));\n}\n\n_s(LandingPage, \"REIPLEvvbV0wFqrCxnmSrDA/E1k=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["D:/e beta react native/eBetaDrive/web-app/src/views/LandingPage.js"],"names":["React","useState","useEffect","useContext","classNames","makeStyles","Header","Footer","GridContainer","GridItem","Button","HeaderLinks","Parallax","Paper","FormControl","Select","MenuItem","TextField","GoogleMapsAutoComplete","styles","ProductSection","SectionDownload","useSelector","useDispatch","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AlertDialog","language","FirebaseContext","dashboardRoutes","useStyles","LandingPage","props","api","getEstimate","clearEstimate","addBooking","clearBooking","MinutesPassed","GetDateString","classes","dispatch","rest","cartypes","state","cars","estimatedata","bookingdata","settings","settingsdata","carType","setCarType","select_car","pickupAddress","setPickupAddress","dropAddress","setDropAddress","estimateModalStatus","setEstimateModalStatus","selectedCarDetails","setSelectedCarDetails","auth","commonAlert","setCommonAlert","open","msg","bookingType","setBookingType","role","setRole","selectedDate","setSelectedDate","handleCarSelect","event","target","value","carDetails","i","length","name","handleBookTypeSelect","onDateChange","estimate","info","profile","usertype","handleGetEstimate","e","preventDefault","directionService","window","google","maps","DirectionsService","route","origin","LatLng","coords","lat","lng","destination","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","distance","routes","legs","duration","polylinePoints","overview_polyline","pickup","drop","routeDetails","past_booking_error","select_proper","place_to_coords_error","must_login","confirmBooking","userDetails","tripdate","Date","toString","bookLater","booking_type_web","handleEstimateModalClose","handleEstimateErrorClose","handleBookingAlertClose","history","push","handleBookingErrorClose","handleCommonAlertClose","height","color","require","default","container","title","book_your_cab","pickup_location","drop_location","width","inputdimmed","input","map","car","image","carphoto","book_now","book_later","booking_date_time","commonInputStyle","className","items","landing_slogan","main","mainRaised","main2","mainRaised2","symbol","estimateFare","cancel","book","booking","booking_success","booking_id","error","flag"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,mBANP;AAOA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,MAAP,MAAmB,oDAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,SAASC,eAAT,QAAgC,QAAhC;AAEA,MAAMC,eAAe,GAAG,EAAxB;AAEA,MAAMC,SAAS,GAAG5B,UAAU,CAACc,MAAD,CAA5B;AAEA,eAAe,SAASe,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAUjC,UAAU,CAAC4B,eAAD,CAA1B;AACA,QAAM;AACJM,IAAAA,WADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA;AANI,MAOFN,GAPJ;AAQA,QAAMO,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAM,EAAE,GAAGsB;AAAL,MAAcV,KAApB;AACA,QAAMW,QAAQ,GAAGxB,WAAW,CAACyB,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,IAAzB,CAA5B;AACA,QAAMC,YAAY,GAAG3B,WAAW,CAACyB,KAAK,IAAIA,KAAK,CAACE,YAAhB,CAAhC;AACA,QAAMC,WAAW,GAAG5B,WAAW,CAACyB,KAAK,IAAIA,KAAK,CAACG,WAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAG7B,WAAW,CAACyB,KAAK,IAAIA,KAAK,CAACK,YAAN,CAAmBD,QAA7B,CAA5B;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBrD,QAAQ,CAAC6B,QAAQ,CAACyB,UAAV,CAAtC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCxD,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACyD,WAAD,EAAcC,cAAd,IAAgC1D,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC2D,mBAAD,EAAsBC,sBAAtB,IAAgD7D,KAAK,CAACC,QAAN,CAAe,KAAf,CAAtD;AACA,QAAM,CAAC6D,kBAAD,EAAqBC,qBAArB,IAA8C9D,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM+D,IAAI,GAAG1C,WAAW,CAACyB,KAAK,IAAIA,KAAK,CAACiB,IAAhB,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjE,QAAQ,CAAC;AAAEkE,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE;AAApB,GAAD,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrE,QAAQ,CAAC,UAAD,CAA9C;AACA,QAAM,CAACsE,IAAD,EAAOC,OAAP,IAAkBvE,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACwE,YAAD,EAAeC,eAAf,IAAkCzE,QAAQ,CAACyC,aAAa,EAAd,CAAhD;;AAEA,QAAMiC,eAAe,GAAIC,KAAD,IAAW;AACjCtB,IAAAA,UAAU,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACA,QAAIC,UAAU,GAAG,IAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlC,QAAQ,CAACmC,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAIlC,QAAQ,CAACkC,CAAD,CAAR,CAAYE,IAAZ,KAAqBN,KAAK,CAACC,MAAN,CAAaC,KAAtC,EAA6C;AAC3CC,QAAAA,UAAU,GAAGjC,QAAQ,CAACkC,CAAD,CAArB;AACD;AACF;;AACDjB,IAAAA,qBAAqB,CAACgB,UAAD,CAArB;AACD,GATD;;AAWA,QAAMI,oBAAoB,GAAIP,KAAD,IAAW;AACpCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AACA,QAAGT,WAAW,KAAG,YAAjB,EAA8B;AAC1BK,MAAAA,eAAe,CAAChC,aAAa,EAAd,CAAf;AACH;AACJ,GALD;;AAOA,QAAM0C,YAAY,GAAIR,KAAD,IAAW;AAC9BF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA5E,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+C,YAAY,CAACoC,QAAjB,EAA2B;AACzBxB,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AACD,QAAGG,IAAI,CAACsB,IAAL,IAAatB,IAAI,CAACsB,IAAL,CAAUC,OAA1B,EAAkC;AAChCf,MAAAA,OAAO,CAACR,IAAI,CAACsB,IAAL,CAAUC,OAAV,CAAkBC,QAAnB,CAAP;AACD;AACF,GAPQ,EAON,CAACvC,YAAY,CAACoC,QAAd,EAAuBrB,IAAI,CAACsB,IAA5B,CAPM,CAAT;;AAUA,QAAMG,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI3B,IAAI,CAACsB,IAAT,EAAe;AACb,UAAI9B,aAAa,IAAIE,WAAjB,IAAgCI,kBAApC,EAAwD;AACtD,cAAM8B,gBAAgB,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,iBAAvB,EAAzB;AACAJ,QAAAA,gBAAgB,CAACK,KAAjB,CACE;AACEC,UAAAA,MAAM,EAAE,IAAIL,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAvB,CAA8B3C,aAAa,CAAC4C,MAAd,CAAqBC,GAAnD,EAAwD7C,aAAa,CAAC4C,MAAd,CAAqBE,GAA7E,CADV;AAEEC,UAAAA,WAAW,EAAE,IAAIV,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAvB,CAA8BzC,WAAW,CAAC0C,MAAZ,CAAmBC,GAAjD,EAAsD3C,WAAW,CAAC0C,MAAZ,CAAmBE,GAAzE,CAFf;AAGEE,UAAAA,UAAU,EAAEX,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBU,UAAnB,CAA8BC;AAH5C,SADF,EAME,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClB,cAAIA,MAAM,KAAKf,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBc,gBAAnB,CAAoCC,EAAnD,EAAuD;AACrD,kBAAMb,KAAK,GAAG;AACZc,cAAAA,QAAQ,EAAEJ,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBC,IAAjB,CAAsB,CAAtB,EAAyBF,QAAzB,CAAkCjC,KAAlC,GAA0C,IADxC;AAEZoC,cAAAA,QAAQ,EAACP,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBC,IAAjB,CAAsB,CAAtB,EAAyBC,QAAzB,CAAkCpC,KAF/B;AAGZqC,cAAAA,cAAc,EAACR,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBI;AAHpB,aAAd;;AAKA,gBAAI/C,WAAW,KAAK,UAApB,EAAgC;AAC9BzB,cAAAA,QAAQ,CAACP,WAAW,CAAC;AACnBgF,gBAAAA,MAAM,EAAE7D,aADW;AAEnB8D,gBAAAA,IAAI,EAAE5D,WAFa;AAGnBqB,gBAAAA,UAAU,EAAEjB,kBAHO;AAInByD,gBAAAA,YAAY,EAAEtB;AAJK,eAAD,CAAZ,CAAR;AAMD,aAPD,MAOO;AACL,kBAAI5B,WAAW,KAAK,YAAhB,IAAgCI,YAApC,EAAkD;AAChD,oBAAIhC,aAAa,CAACgC,YAAD,CAAb,IAA+B,EAAnC,EAAuC;AACrC7B,kBAAAA,QAAQ,CAACP,WAAW,CAAC;AACnBgF,oBAAAA,MAAM,EAAE7D,aADW;AAEnB8D,oBAAAA,IAAI,EAAE5D,WAFa;AAGnBqB,oBAAAA,UAAU,EAAEjB,kBAHO;AAInByD,oBAAAA,YAAY,EAAEtB;AAJK,mBAAD,CAAZ,CAAR;AAMD,iBAPD,MAOO;AACL/B,kBAAAA,cAAc,CAAC;AAAEC,oBAAAA,IAAI,EAAE,IAAR;AAAcC,oBAAAA,GAAG,EAAEtC,QAAQ,CAAC0F;AAA5B,mBAAD,CAAd;AACD;AACF,eAXD,MAWO;AACLtD,gBAAAA,cAAc,CAAC;AAAEC,kBAAAA,IAAI,EAAE,IAAR;AAAcC,kBAAAA,GAAG,EAAEtC,QAAQ,CAAC2F;AAA5B,iBAAD,CAAd;AACD;AACF;AACF,WA7BD,MA6BM;AACJvD,YAAAA,cAAc,CAAC;AAAEC,cAAAA,IAAI,EAAE,IAAR;AAAcC,cAAAA,GAAG,EAAEtC,QAAQ,CAAC4F;AAA5B,aAAD,CAAd;AACD;AACF,SAvCH;AAyCD,OA3CD,MA2CO;AACLxD,QAAAA,cAAc,CAAC;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,GAAG,EAAEtC,QAAQ,CAAC2F;AAA5B,SAAD,CAAd;AACD;AACF,KA/CD,MA+CO;AACLvD,MAAAA,cAAc,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,GAAG,EAAEtC,QAAQ,CAAC6F;AAA5B,OAAD,CAAd;AACD;AACF,GApDD;;AAsDA,QAAMC,cAAc,GAAIlC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA9B,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAjB,IAAAA,QAAQ,CAACL,UAAU,CAAC;AAClB8E,MAAAA,MAAM,EAAE7D,aADU;AAElB8D,MAAAA,IAAI,EAAE5D,WAFY;AAGlBqB,MAAAA,UAAU,EAAEjB,kBAHM;AAIlB+D,MAAAA,WAAW,EAAE7D,IAAI,CAACsB,IAJA;AAKlBD,MAAAA,QAAQ,EAAEpC,YAAY,CAACoC,QALL;AAMlByC,MAAAA,QAAQ,EAAE,IAAIC,IAAJ,CAAStD,YAAT,EAAuBuD,QAAvB,EANQ;AAOlBC,MAAAA,SAAS,EAAE5D,WAAW,KAAG,YAAd,GAA2B,IAA3B,GAAgC,KAPzB;AAQlBlB,MAAAA,QAAQ,EAACA,QARS;AASlB+E,MAAAA,gBAAgB,EAAE;AATA,KAAD,CAAX,CAAR;AAYD,GAfD;;AAiBA,QAAMC,wBAAwB,GAAIzC,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACA9B,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAjB,IAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACD,GAJD;;AAMA,QAAM8F,wBAAwB,GAAI1C,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACA/C,IAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACD,GAHD;;AAKA,QAAM+F,uBAAuB,GAAI3C,CAAD,IAAO;AACrCA,IAAAA,CAAC,CAACC,cAAF;AACA/C,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACAI,IAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACAH,IAAAA,KAAK,CAACmG,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACD,GALD;;AAOA,QAAMC,uBAAuB,GAAI9C,CAAD,IAAO;AACrCA,IAAAA,CAAC,CAACC,cAAF;AACA/C,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACD,GAHD;;AAKA,QAAMiG,sBAAsB,GAAI/C,CAAD,IAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACAzB,IAAAA,cAAc,CAAC;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,GAAG,EAAE;AAApB,KAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,MAAM,EAAEpC,eAFV;AAGE,IAAA,UAAU,eAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHd;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,mBAAmB,EAAE;AACnB0G,MAAAA,MAAM,EAAE,GADW;AAEnBC,MAAAA,KAAK,EAAE;AAFY;AALvB,KASM9F,IATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAYE,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,KAAK,EAAE+F,OAAO,CAAC,2BAAD,CAAP,CAAqCC,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI/F,QAAQ,IAAI,CAACyB,IAAd,IAAwBzB,QAAQ,KAAKyB,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,OAAlC,CAAhC,gBACC;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAACmG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAEnG,OAAO,CAACoG,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BjH,QAAQ,CAACkH,aAAxC,CAFF,CADF,CADF,eAOE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AACE,IAAA,WAAW,EAAElH,QAAQ,CAACmH,eADxB;AAEE,IAAA,OAAO,EAAE,QAFX;AAGE,IAAA,KAAK,EAAEzF,aAHT;AAIE,IAAA,QAAQ,EACLsB,KAAD,IAAW;AACTrB,MAAAA,gBAAgB,CAACqB,KAAD,CAAhB;AACD,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAPF,eAuBE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AACE,IAAA,WAAW,EAAEhD,QAAQ,CAACoH,aADxB;AAEE,IAAA,OAAO,EAAE,QAFX;AAGE,IAAA,KAAK,EAAExF,WAHT;AAIE,IAAA,QAAQ,EACLoB,KAAD,IAAW;AACTnB,MAAAA,cAAc,CAACmB,KAAD,CAAd;AACD,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAvBF,eAuCE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAE,CAArB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAA+B,IAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAEqE,MAAAA,KAAK,EAAE;AAAT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,KAAK,EAAE9F,OAFT;AAGE,IAAA,QAAQ,EAAEsB,eAHZ;AAIE,IAAA,SAAS,EAAEtB,OAAO,KAAKvB,QAAQ,CAACyB,UAArB,GAAkCZ,OAAO,CAACyG,WAA1C,GAAwDzG,OAAO,CAAC0G,KAJ7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEvH,QAAQ,CAACyB,UAA1B;AAAsC,IAAA,GAAG,EAAEzB,QAAQ,CAACyB,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,QAAQ,CAACyB,UADZ,CANF,EAUIT,QAAQ,CAACwG,GAAT,CAAcC,GAAD,iBACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACrE,IAAnB;AAAyB,IAAA,KAAK,EAAEqE,GAAG,CAACrE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEqE,GAAG,CAACC,KAAd;AAAqB,IAAA,SAAS,EAAE7G,OAAO,CAAC8G,QAAxC;AAAkD,IAAA,GAAG,EAAC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACuEF,GAAG,CAACrE,IAD3E,CADF,CAVJ,CADF,CADJ,CADA,eAsBE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAE,CAArB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAA+B,IAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAEiE,MAAAA,KAAK,EAAE;AAAT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,qBADL;AAEE,IAAA,KAAK,EAAE9E,WAFT;AAGE,IAAA,QAAQ,EAAEc,oBAHZ;AAIE,IAAA,SAAS,EAAExC,OAAO,CAAC0G,KAJrB;AAKE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAE,UAAf;AAA2B,IAAA,KAAK,EAAE,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvH,QAAQ,CAAC4H,QADZ,CAPF,eAUE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAE,YAAf;AAA6B,IAAA,KAAK,EAAE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5H,QAAQ,CAAC6H,UADZ,CAVF,CADF,CADF,CAtBF,CAvCF,eAgFE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtF,WAAW,KAAG,YAAd,gBACD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAE,CAArB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAA+B,IAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,KAAK,EAAEvC,QAAQ,CAAC8H,iBAFlB;AAGE,IAAA,IAAI,EAAC,gBAHP;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,SAAS,MALX;AAME,IAAA,SAAS,EAAEjH,OAAO,CAACkH,gBANrB;AAOE,IAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAEnH,OAAO,CAAC0G;AADT,KAPd;AAUE,IAAA,KAAK,EAAI5E,YAVX;AAWE,IAAA,QAAQ,EAAEW,YAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADC,GAgBA,IAjBH,eAkBE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAE,CAArB;AAAwB,IAAA,EAAE,EAAEf,WAAW,KAAG,YAAd,GAA2B,CAA3B,GAA6B,CAAzD;AAA4D,IAAA,EAAE,EAAEA,WAAW,KAAG,YAAd,GAA2B,CAA3B,GAA6B,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,SAAS,EAAE1B,OAAO,CAACoH,KAJrB;AAKE,IAAA,OAAO,EAAEtE,iBALX;AAME,IAAA,KAAK,EAAE;AAACiD,MAAAA,MAAM,EAACrE,WAAW,KAAG,YAAd,GAA2B,EAA3B,GAA8B;AAAtC,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASGvC,QAAQ,CAAC4H,QATZ,CADF,CAlBF,CAhFF,CADD,gBAmHC;AAAK,IAAA,SAAS,EAAE/G,OAAO,CAACmG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAEnG,OAAO,CAACoG,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BjH,QAAQ,CAACkI,cAAxC,CAFF,CADF,CADF,CApHJ,CAZF,eA0IE;AAAK,IAAA,SAAS,EAAE5J,UAAU,CAACuC,OAAO,CAACsH,IAAT,EAAetH,OAAO,CAACuH,UAAvB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEvH,OAAO,CAACmG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CA1IF,eA+IE;AAAK,IAAA,SAAS,EAAE1I,UAAU,CAACuC,OAAO,CAACwH,KAAT,EAAgBxH,OAAO,CAACyH,WAAxB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEzH,OAAO,CAACmG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CA/IF,eAoJE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApJF,eAqJE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAElF,mBADR;AAEE,IAAA,OAAO,EAAEuE,wBAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCrG,QAAQ,CAACuD,QAA/C,CANF,eAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlC,QAAQ,GAACA,QAAQ,CAACkH,MAAV,GAAiB,IAD5B,OACmCpH,YAAY,CAACoC,QAAb,GAAwBpC,YAAY,CAACoC,QAAb,CAAsBiF,YAA9C,GAA6D,IADhG,CADF,CAPF,eAYE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEnC,wBAAjB;AAA2C,IAAA,KAAK,EAAC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrG,QAAQ,CAACyI,MADZ,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE3C,cAAjB;AAAiC,IAAA,KAAK,EAAC,SAAvC;AAAiD,IAAA,SAAS,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9F,QAAQ,CAAC0I,IADZ,CAJF,CAZF,CArJF,eA0KE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEtH,WAAW,CAACuH,OAAZ,GAAsB,IAAtB,GAA6B,KAAhD;AAAuD,IAAA,OAAO,EAAEpC,uBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FnF,WAAW,CAACuH,OAAZ,GAAsB3I,QAAQ,CAAC4I,eAAT,GAA2BxH,WAAW,CAACuH,OAAZ,CAAoBE,UAArE,GAAkF,IAA5K,CA1KF,eA2KE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEzH,WAAW,CAAC0H,KAAZ,CAAkBC,IAArC;AAA2C,IAAA,OAAO,EAAErC,uBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8EtF,WAAW,CAAC0H,KAAZ,CAAkBxG,GAAhG,CA3KF,eA4KE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEnB,YAAY,CAAC2H,KAAb,CAAmBC,IAAtC;AAA4C,IAAA,OAAO,EAAEzC,wBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgFnF,YAAY,CAAC2H,KAAb,CAAmBxG,GAAnG,CA5KF,eA6KE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEH,WAAW,CAACE,IAA/B;AAAqC,IAAA,OAAO,EAAEsE,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuExE,WAAW,CAACG,GAAnF,CA7KF,CADF;AAiLD;;GAhVuBlC,W;UAUND,S,EACCV,W,EAEAD,W,EACIA,W,EACDA,W,EACHA,W,EAMJA,W;;;KAtBSY,W","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport classNames from \"classnames\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport {\n  Paper,\n  FormControl,\n  Select,\n  MenuItem,\n  TextField\n} from '@material-ui/core';\nimport GoogleMapsAutoComplete from '../components/GoogleMapsAutoComplete';\nimport styles from \"assets/jss/material-kit-react/views/landingPage.js\";\nimport ProductSection from \"./Sections/ProductSection.js\";\nimport SectionDownload from \"./Sections/SectionDownload.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AlertDialog from '../components/AlertDialog';\nimport {language} from 'config';\nimport { FirebaseContext } from 'common';\n\nconst dashboardRoutes = [];\n\nconst useStyles = makeStyles(styles);\n\nexport default function LandingPage(props) {\n  const { api } = useContext(FirebaseContext);\n  const {\n    getEstimate, \n    clearEstimate,\n    addBooking, \n    clearBooking,\n    MinutesPassed,\n    GetDateString\n  } = api;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { ...rest } = props;\n  const cartypes = useSelector(state => state.cartypes.cars);\n  const estimatedata = useSelector(state => state.estimatedata);\n  const bookingdata = useSelector(state => state.bookingdata);\n  const settings = useSelector(state => state.settingsdata.settings);\n  const [carType, setCarType] = useState(language.select_car);\n  const [pickupAddress, setPickupAddress] = useState(null);\n  const [dropAddress, setDropAddress] = useState(null);\n  const [estimateModalStatus, setEstimateModalStatus] = React.useState(false);\n  const [selectedCarDetails, setSelectedCarDetails] = useState(null);\n  const auth = useSelector(state => state.auth);\n  const [commonAlert, setCommonAlert] = useState({ open: false, msg: '' });\n  const [bookingType, setBookingType] = useState('Book Now');\n  const [role, setRole] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(GetDateString());\n\n  const handleCarSelect = (event) => {\n    setCarType(event.target.value);\n    let carDetails = null;\n    for (let i = 0; i < cartypes.length; i++) {\n      if (cartypes[i].name === event.target.value) {\n        carDetails = cartypes[i];\n      }\n    }\n    setSelectedCarDetails(carDetails);\n  };\n\n  const handleBookTypeSelect = (event) => {\n      setBookingType(event.target.value);\n      if(bookingType==='Book Later'){\n          setSelectedDate(GetDateString());\n      }\n  };\n\n  const onDateChange = (event) => {\n    setSelectedDate(event.target.value);\n  };\n\n  useEffect(() => {\n    if (estimatedata.estimate) {\n      setEstimateModalStatus(true);\n    }\n    if(auth.info && auth.info.profile){\n      setRole(auth.info.profile.usertype);\n    }\n  }, [estimatedata.estimate,auth.info]);\n\n\n  const handleGetEstimate = (e) => {\n    e.preventDefault();\n    if (auth.info) {\n      if (pickupAddress && dropAddress && selectedCarDetails) {\n        const directionService = new window.google.maps.DirectionsService();\n        directionService.route(\n          {\n            origin: new window.google.maps.LatLng(pickupAddress.coords.lat, pickupAddress.coords.lng),\n            destination: new window.google.maps.LatLng(dropAddress.coords.lat, dropAddress.coords.lng),\n            travelMode: window.google.maps.TravelMode.DRIVING\n          },\n          (result, status) => {\n            if (status === window.google.maps.DirectionsStatus.OK) {\n              const route = {\n                distance:(result.routes[0].legs[0].distance.value / 1000),\n                duration:result.routes[0].legs[0].duration.value,\n                polylinePoints:result.routes[0].overview_polyline\n              };\n              if (bookingType === 'Book Now') {\n                dispatch(getEstimate({\n                  pickup: pickupAddress,\n                  drop: dropAddress,\n                  carDetails: selectedCarDetails,\n                  routeDetails: route\n                }));\n              } else {\n                if (bookingType === 'Book Later' && selectedDate) {\n                  if (MinutesPassed(selectedDate) >= 15) {\n                    dispatch(getEstimate({\n                      pickup: pickupAddress,\n                      drop: dropAddress,\n                      carDetails: selectedCarDetails,\n                      routeDetails: route\n                    }));\n                  } else {\n                    setCommonAlert({ open: true, msg: language.past_booking_error });\n                  }\n                } else {\n                  setCommonAlert({ open: true, msg: language.select_proper });\n                }\n              }\n            } else{\n              setCommonAlert({ open: true, msg: language.place_to_coords_error })\n            }\n          }\n        )\n      } else {\n        setCommonAlert({ open: true, msg: language.select_proper })\n      }\n    } else {\n      setCommonAlert({ open: true, msg: language.must_login })\n    }\n  };\n\n  const confirmBooking = (e) => {\n    e.preventDefault();\n    setEstimateModalStatus(false);\n    dispatch(addBooking({\n      pickup: pickupAddress,\n      drop: dropAddress,\n      carDetails: selectedCarDetails,\n      userDetails: auth.info,\n      estimate: estimatedata.estimate,\n      tripdate: new Date(selectedDate).toString(),\n      bookLater: bookingType==='Book Later'?true:false,\n      settings:settings,\n      booking_type_web: true\n    }));\n\n  };\n\n  const handleEstimateModalClose = (e) => {\n    e.preventDefault();\n    setEstimateModalStatus(false);\n    dispatch(clearEstimate());\n  };\n\n  const handleEstimateErrorClose = (e) => {\n    e.preventDefault();\n    dispatch(clearEstimate());\n  };\n\n  const handleBookingAlertClose = (e) => {\n    e.preventDefault();\n    dispatch(clearBooking());\n    dispatch(clearEstimate());\n    props.history.push('/bookings');\n  };\n\n  const handleBookingErrorClose = (e) => {\n    e.preventDefault();\n    dispatch(clearBooking());\n  };\n\n  const handleCommonAlertClose = (e) => {\n    e.preventDefault();\n    setCommonAlert({ open: false, msg: '' })\n  };\n\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        routes={dashboardRoutes}\n        rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 400,\n          color: \"white\"\n        }}\n        {...rest}\n      />\n      <Parallax filter image={require(\"assets/img/background.jpg\").default}>\n        {(cartypes && !role) || (cartypes && (role === 'rider' || role === 'admin'))?\n          <div className={classes.container}>\n            <GridContainer spacing={2}>\n              <GridItem xs={12} sm={12} md={6} lg={6}>\n                <br />\n                <h1 className={classes.title}>{language.book_your_cab}</h1>\n              </GridItem>\n            </GridContainer>\n            <GridContainer spacing={2}>\n              <GridItem xs={12} sm={12} md={6} lg={6}>\n                <Paper >\n                  <GoogleMapsAutoComplete \n                    placeholder={language.pickup_location}\n                    variant={\"filled\"}\n                    value={pickupAddress}\n                    onChange={\n                      (value) => {\n                        setPickupAddress(value);\n                      }\n                    }\n                  />\n                </Paper>\n              </GridItem>\n            </GridContainer>\n            <GridContainer spacing={2}>\n              <GridItem xs={12} sm={12} md={6} lg={6}>\n                <Paper>\n                  <GoogleMapsAutoComplete \n                    placeholder={language.drop_location}\n                    variant={\"filled\"}\n                    value={dropAddress}\n                    onChange={\n                      (value) => {\n                        setDropAddress(value);\n                      }\n                    }\n                  />\n                </Paper>\n              </GridItem>\n            </GridContainer>\n            <GridContainer spacing={2}>\n            <GridItem xs={6} sm={6} md={3} lg={3}>\n                <FormControl style={{ width: '100%' }}>\n                  <Select\n                    id=\"car-type-native\"\n                    value={carType}\n                    onChange={handleCarSelect}\n                    className={carType === language.select_car ? classes.inputdimmed : classes.input}\n                  >\n                    <MenuItem value={language.select_car} key={language.select_car}>\n                      {language.select_car}\n                    </MenuItem>\n                    {\n                      cartypes.map((car) =>\n                        <MenuItem key={car.name} value={car.name}>\n                          <img src={car.image} className={classes.carphoto} alt=\"car types\" />{car.name}\n                        </MenuItem>\n                      )\n                    }\n                  </Select>\n                </FormControl>\n              </GridItem>\n              <GridItem xs={6} sm={6} md={3} lg={3}>\n                <FormControl style={{ width: '100%' }}>\n                  <Select\n                    id=\"booking-type-native\"\n                    value={bookingType}\n                    onChange={handleBookTypeSelect}\n                    className={classes.input}\n                    inputProps={{ 'aria-label': 'Without label' }}\n                  >\n                    <MenuItem key={\"Book Now\"} value={\"Book Now\"}>\n                      {language.book_now}\n                    </MenuItem>\n                    <MenuItem key={\"Book Later\"} value={\"Book Later\"}>\n                      {language.book_later}\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </GridItem>\n            </GridContainer>\n            <GridContainer spacing={2}>\n              {bookingType==='Book Later'?\n              <GridItem xs={6} sm={6} md={4} lg={4}>\n                <TextField\n                  id=\"datetime-local\"\n                  label={language.booking_date_time}\n                  type=\"datetime-local\"\n                  variant=\"filled\"\n                  fullWidth\n                  className={classes.commonInputStyle}\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  value = {selectedDate}\n                  onChange={onDateChange}\n                />\n              </GridItem>\n              :null}\n              <GridItem xs={6} sm={6} md={bookingType==='Book Later'?2:6} lg={bookingType==='Book Later'?2:6}>\n                <Button\n                  color=\"success\"\n                  size=\"lg\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.items}\n                  onClick={handleGetEstimate}\n                  style={{height:bookingType==='Book Later'?76:52}}\n                >\n                  <i className=\"fas fa-car\" />\n                  {language.book_now}\n                </Button>\n              </GridItem>\n            </GridContainer>\n          </div>\n          : \n          <div className={classes.container}>\n            <GridContainer spacing={2}>\n              <GridItem xs={12} sm={12} md={6} lg={6}>\n                <br />\n                <h1 className={classes.title}>{language.landing_slogan}</h1>\n              </GridItem>\n            </GridContainer>\n          </div>\n          }\n      </Parallax>\n      <div className={classNames(classes.main, classes.mainRaised)}>\n        <div className={classes.container}>\n          <ProductSection />\n        </div>\n      </div>\n      <div className={classNames(classes.main2, classes.mainRaised2)}>\n        <div className={classes.container}>\n          <SectionDownload />\n        </div>\n      </div>\n      <Footer />\n      <Dialog\n        open={estimateModalStatus}\n        onClose={handleEstimateModalClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{language.estimate}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {settings?settings.symbol:null} {estimatedata.estimate ? estimatedata.estimate.estimateFare : null}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleEstimateModalClose} color=\"primary\">\n            {language.cancel}\n          </Button>\n          <Button onClick={confirmBooking} color=\"primary\" autoFocus>\n            {language.book}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <AlertDialog open={bookingdata.booking ? true : false} onClose={handleBookingAlertClose}>{bookingdata.booking ? language.booking_success + bookingdata.booking.booking_id : null}</AlertDialog>\n      <AlertDialog open={bookingdata.error.flag} onClose={handleBookingErrorClose}>{bookingdata.error.msg}</AlertDialog>\n      <AlertDialog open={estimatedata.error.flag} onClose={handleEstimateErrorClose}>{estimatedata.error.msg}</AlertDialog>\n      <AlertDialog open={commonAlert.open} onClose={handleCommonAlertClose}>{commonAlert.msg}</AlertDialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}