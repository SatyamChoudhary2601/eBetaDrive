{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\components\\\\Parallax\\\\Parallax.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-kit-react/components/parallaxStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Parallax(props) {\n  _s();\n\n  let windowScrollTop;\n\n  if (window.innerWidth >= 768) {\n    windowScrollTop = window.pageYOffset / 3;\n  } else {\n    windowScrollTop = 0;\n  }\n\n  const [transform, setTransform] = React.useState(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  React.useEffect(() => {\n    if (window.innerWidth >= 768) {\n      window.addEventListener(\"scroll\", resetTransform);\n    }\n\n    return function cleanup() {\n      if (window.innerWidth >= 768) {\n        window.removeEventListener(\"scroll\", resetTransform);\n      }\n    };\n  });\n\n  const resetTransform = () => {\n    var windowScrollTop = window.pageYOffset / 3;\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  };\n\n  const {\n    filter,\n    className,\n    children,\n    style,\n    image,\n    small\n  } = props;\n  const classes = useStyles();\n  const parallaxClasses = classNames({\n    [classes.parallax]: true,\n    [classes.filter]: filter,\n    [classes.small]: small,\n    [className]: className !== undefined\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: parallaxClasses,\n    style: { ...style,\n      backgroundImage: \"url(\" + image + \")\",\n      transform: transform\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n_s(Parallax, \"VLqLsby0parrp27ILNhKGArHWAQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Parallax;\nParallax.propTypes = {\n  className: PropTypes.string,\n  filter: PropTypes.bool,\n  children: PropTypes.node,\n  style: PropTypes.string,\n  image: PropTypes.string,\n  small: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Parallax\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/components/Parallax/Parallax.js"],"names":["React","classNames","PropTypes","makeStyles","styles","useStyles","Parallax","props","windowScrollTop","window","innerWidth","pageYOffset","transform","setTransform","useState","useEffect","addEventListener","resetTransform","cleanup","removeEventListener","filter","className","children","style","image","small","classes","parallaxClasses","parallax","undefined","backgroundImage","propTypes","string","bool","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,2DAAnB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACC,MAAD,CAA5B;AAEA,eAAe,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,MAAIC,eAAJ;;AACA,MAAIC,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5BF,IAAAA,eAAe,GAAGC,MAAM,CAACE,WAAP,GAAqB,CAAvC;AACD,GAFD,MAEO;AACLH,IAAAA,eAAe,GAAG,CAAlB;AACD;;AACD,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,KAAK,CAACc,QAAN,CAChC,mBAAmBN,eAAnB,GAAqC,OADL,CAAlC;AAGAR,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,QAAIN,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5BD,MAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCC,cAAlC;AACD;;AACD,WAAO,SAASC,OAAT,GAAmB;AACxB,UAAIT,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5BD,QAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,cAArC;AACD;AACF,KAJD;AAKD,GATD;;AAUA,QAAMA,cAAc,GAAG,MAAM;AAC3B,QAAIT,eAAe,GAAGC,MAAM,CAACE,WAAP,GAAqB,CAA3C;AACAE,IAAAA,YAAY,CAAC,mBAAmBL,eAAnB,GAAqC,OAAtC,CAAZ;AACD,GAHD;;AAIA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,KAA/B;AAAsCC,IAAAA,KAAtC;AAA6CC,IAAAA;AAA7C,MAAuDlB,KAA7D;AACA,QAAMmB,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAMsB,eAAe,GAAG1B,UAAU,CAAC;AACjC,KAACyB,OAAO,CAACE,QAAT,GAAoB,IADa;AAEjC,KAACF,OAAO,CAACN,MAAT,GAAkBA,MAFe;AAGjC,KAACM,OAAO,CAACD,KAAT,GAAiBA,KAHgB;AAIjC,KAACJ,SAAD,GAAaA,SAAS,KAAKQ;AAJM,GAAD,CAAlC;AAMA,sBACE;AACE,IAAA,SAAS,EAAEF,eADb;AAEE,IAAA,KAAK,EAAE,EACL,GAAGJ,KADE;AAELO,MAAAA,eAAe,EAAE,SAASN,KAAT,GAAiB,GAF7B;AAGLZ,MAAAA,SAAS,EAAEA;AAHN,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGU,QARH,CADF;AAYD;;GA5CuBhB,Q;UAyBND,S;;;KAzBMC,Q;AA8CxBA,QAAQ,CAACyB,SAAT,GAAqB;AACnBV,EAAAA,SAAS,EAAEnB,SAAS,CAAC8B,MADF;AAEnBZ,EAAAA,MAAM,EAAElB,SAAS,CAAC+B,IAFC;AAGnBX,EAAAA,QAAQ,EAAEpB,SAAS,CAACgC,IAHD;AAInBX,EAAAA,KAAK,EAAErB,SAAS,CAAC8B,MAJE;AAKnBR,EAAAA,KAAK,EAAEtB,SAAS,CAAC8B,MALE;AAMnBP,EAAAA,KAAK,EAAEvB,SAAS,CAAC+B;AANE,CAArB","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-kit-react/components/parallaxStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Parallax(props) {\n  let windowScrollTop;\n  if (window.innerWidth >= 768) {\n    windowScrollTop = window.pageYOffset / 3;\n  } else {\n    windowScrollTop = 0;\n  }\n  const [transform, setTransform] = React.useState(\n    \"translate3d(0,\" + windowScrollTop + \"px,0)\"\n  );\n  React.useEffect(() => {\n    if (window.innerWidth >= 768) {\n      window.addEventListener(\"scroll\", resetTransform);\n    }\n    return function cleanup() {\n      if (window.innerWidth >= 768) {\n        window.removeEventListener(\"scroll\", resetTransform);\n      }\n    };\n  });\n  const resetTransform = () => {\n    var windowScrollTop = window.pageYOffset / 3;\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  };\n  const { filter, className, children, style, image, small } = props;\n  const classes = useStyles();\n  const parallaxClasses = classNames({\n    [classes.parallax]: true,\n    [classes.filter]: filter,\n    [classes.small]: small,\n    [className]: className !== undefined\n  });\n  return (\n    <div\n      className={parallaxClasses}\n      style={{\n        ...style,\n        backgroundImage: \"url(\" + image + \")\",\n        transform: transform\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nParallax.propTypes = {\n  className: PropTypes.string,\n  filter: PropTypes.bool,\n  children: PropTypes.node,\n  style: PropTypes.string,\n  image: PropTypes.string,\n  small: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}