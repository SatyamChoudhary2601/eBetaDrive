{"ast":null,"code":"var _jsxFileName = \"D:\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\AuthLoading.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport CircularLoading from \"../components/CircularLoading\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { language } from 'config';\nimport { FirebaseContext } from 'common';\n\nfunction AuthLoading(props) {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    fetchUser,\n    fetchCarTypes,\n    fetchSettings,\n    fetchBookings,\n    fetchCancelReasons,\n    fetchPromos,\n    fetchDriverEarnings,\n    fetchUsers,\n    fetchNotifications,\n    fetchEarningsReport,\n    signOut,\n    fetchWithdraws\n  } = api;\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  useEffect(() => {\n    dispatch(fetchUser());\n    dispatch(fetchCarTypes());\n    dispatch(fetchSettings());\n  }, [dispatch, fetchUser, fetchCarTypes, fetchSettings]);\n  useEffect(() => {\n    if (auth.info) {\n      if (auth.info.profile) {\n        let role = auth.info.profile.usertype;\n\n        if (role === 'rider') {\n          dispatch(fetchBookings(auth.info.uid, role));\n          dispatch(fetchCancelReasons());\n        } else if (role === 'driver') {\n          dispatch(fetchBookings(auth.info.uid, role));\n        } else if (role === 'admin') {\n          dispatch(fetchUsers());\n          dispatch(fetchBookings(auth.info.uid, role));\n          dispatch(fetchPromos());\n          dispatch(fetchDriverEarnings(auth.info.uid, role));\n          dispatch(fetchNotifications());\n          dispatch(fetchEarningsReport());\n          dispatch(fetchCancelReasons());\n          dispatch(fetchWithdraws());\n        } else if (role === 'fleetadmin') {\n          dispatch(fetchUsers());\n          dispatch(fetchBookings(auth.info.uid, role));\n          dispatch(fetchDriverEarnings(auth.info.uid, role));\n        } else {\n          alert(language.not_valid_user_type);\n          dispatch(signOut());\n        }\n      } else {\n        alert(language.user_issue_contact_admin);\n        dispatch(signOut());\n      }\n    }\n  }, [auth.info, dispatch, fetchBookings, fetchCancelReasons, fetchDriverEarnings, fetchEarningsReport, fetchNotifications, fetchPromos, fetchUsers, fetchWithdraws, signOut]);\n  return auth.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }) : props.children;\n}\n\n_s(AuthLoading, \"r/x3xgqcIwUNn2/U7sgz4BXAcQE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AuthLoading;\nexport default AuthLoading;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthLoading\");","map":{"version":3,"sources":["D:/e beta react native/eBetaDrive/web-app/src/views/AuthLoading.js"],"names":["React","useEffect","useContext","CircularLoading","useSelector","useDispatch","language","FirebaseContext","AuthLoading","props","api","fetchUser","fetchCarTypes","fetchSettings","fetchBookings","fetchCancelReasons","fetchPromos","fetchDriverEarnings","fetchUsers","fetchNotifications","fetchEarningsReport","signOut","fetchWithdraws","dispatch","auth","state","info","profile","role","usertype","uid","alert","not_valid_user_type","user_issue_contact_admin","loading","children"],"mappings":"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","sourcesContent":["import React,{ useEffect, useContext } from 'react';\nimport CircularLoading from \"../components/CircularLoading\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {language} from 'config';\nimport { FirebaseContext } from 'common';\n\nfunction AuthLoading(props) {\n    const { api } = useContext(FirebaseContext);\n    const {\n        fetchUser,\n        fetchCarTypes,\n        fetchSettings, \n        fetchBookings,\n        fetchCancelReasons,\n        fetchPromos,\n        fetchDriverEarnings,\n        fetchUsers,\n        fetchNotifications,\n        fetchEarningsReport,\n        signOut,\n        fetchWithdraws,\n    } = api;\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n\n    useEffect(()=>{\n        dispatch(fetchUser());\n        dispatch(fetchCarTypes());\n        dispatch(fetchSettings());\n    },[dispatch,fetchUser,fetchCarTypes,fetchSettings]);\n\n    useEffect(()=>{\n        if(auth.info){\n            if(auth.info.profile){\n                let role = auth.info.profile.usertype;\n                if(role === 'rider'){\n                    dispatch(fetchBookings(auth.info.uid,role));\n                    dispatch(fetchCancelReasons());\n                }\n                else if(role === 'driver'){\n                    dispatch(fetchBookings(auth.info.uid,role));\n                }\n                else if(role === 'admin'){\n                    dispatch(fetchUsers());\n                    dispatch(fetchBookings(auth.info.uid,role));\n                    dispatch(fetchPromos());\n                    dispatch(fetchDriverEarnings(auth.info.uid,role));\n                    dispatch(fetchNotifications());\n                    dispatch(fetchEarningsReport());\n                    dispatch(fetchCancelReasons());\n                    dispatch(fetchWithdraws());\n                }\n                else if(role === 'fleetadmin'){\n                    dispatch(fetchUsers());\n                    dispatch(fetchBookings(auth.info.uid,role));\n                    dispatch(fetchDriverEarnings(auth.info.uid,role));\n                }\n                else{\n                    alert(language.not_valid_user_type);\n                    dispatch(signOut());\n                }\n            }else{\n                alert(language.user_issue_contact_admin);\n                dispatch(signOut());\n            }\n        }\n    },[auth.info,dispatch,fetchBookings,fetchCancelReasons,fetchDriverEarnings,fetchEarningsReport,fetchNotifications,fetchPromos,fetchUsers,fetchWithdraws,signOut]);\n\n    return (\n        auth.loading? <CircularLoading/>:props.children\n    )\n}\n\nexport default AuthLoading;"]},"metadata":{},"sourceType":"module"}