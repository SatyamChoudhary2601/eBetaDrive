{"ast":null,"code":"var _jsxFileName = \"D:\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\components\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\nimport assets from 'assets';\nconst useStyles = makeStyles(styles);\nexport default function Header(props) {\n  _s();\n\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [secondLogo, setSecondLogo] = React.useState(false);\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const headerColorChange = () => {\n    const {\n      color,\n      changeColorOnScroll\n    } = props;\n    const windowsScrollTop = window.pageYOffset;\n\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[changeColorOnScroll.color]);\n      setSecondLogo(true);\n    } else {\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[changeColorOnScroll.color]);\n      setSecondLogo(false);\n    }\n  };\n\n  const {\n    color,\n    rightLinks,\n    leftLinks,\n    fixed,\n    absolute\n  } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n  const brandComponent = /*#__PURE__*/React.createElement(Button, {\n    href: \"/\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }\n  }, secondLogo ? /*#__PURE__*/React.createElement(\"img\", {\n    src: assets.logo138x75black,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 43\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: assets.logo138x75white,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 35\n    }\n  }));\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, leftLinks !== undefined ? brandComponent : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, leftLinks !== undefined ? /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, leftLinks) : brandComponent), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, rightLinks), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: mobileOpen,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, leftLinks, rightLinks))));\n}\n\n_s(Header, \"nMYGznfQi4cj1lpynd/g96WITjA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\nHeader.defaultProp = {\n  color: \"white\"\n};\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]),\n  rightLinks: PropTypes.node,\n  leftLinks: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]).isRequired\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/e beta react native/eBetaDrive/web-app/src/components/Header/Header.js"],"names":["React","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Menu","styles","assets","useStyles","Header","props","classes","mobileOpen","setMobileOpen","useState","secondLogo","setSecondLogo","useEffect","changeColorOnScroll","window","addEventListener","headerColorChange","cleanup","removeEventListener","handleDrawerToggle","color","windowsScrollTop","pageYOffset","height","document","body","getElementsByTagName","classList","remove","add","rightLinks","leftLinks","fixed","absolute","appBarClasses","appBar","brandComponent","title","logo138x75black","logo138x75white","container","undefined","flex","paper","drawerPaper","appResponsive","defaultProp","propTypes","oneOf","node","brand","string","bool","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport styles from \"assets/jss/material-kit-react/components/headerStyle.js\";\nimport assets from 'assets';\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [secondLogo,setSecondLogo] = React.useState(false);\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const headerColorChange = () => {\n    const { color, changeColorOnScroll } = props;\n    const windowsScrollTop = window.pageYOffset;\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[changeColorOnScroll.color]);\n      setSecondLogo(true);\n    } else {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[changeColorOnScroll.color]);\n      setSecondLogo(false);\n    }\n  };\n  const { color, rightLinks, leftLinks, fixed, absolute } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n  const brandComponent = <Button \n                              href=\"/\"\n                              className={classes.title}>\n                              {secondLogo?<img src={assets.logo138x75black} alt=\"Logo\" />:\n                                  <img src={assets.logo138x75white} alt=\"Logo\" />\n                              }\n                         </Button>;\n  return (\n    <AppBar className={appBarClasses}>\n      <Toolbar className={classes.container}>\n        {leftLinks !== undefined ? brandComponent : null}\n        <div className={classes.flex}>\n          {leftLinks !== undefined ? (\n            <Hidden smDown implementation=\"css\">\n              {leftLinks}\n            </Hidden>\n          ) : (\n            brandComponent\n          )}\n        </div>\n        <Hidden smDown implementation=\"css\">\n          {rightLinks}\n        </Hidden>\n        <Hidden mdUp>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <Hidden mdUp implementation=\"js\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={\"right\"}\n          open={mobileOpen}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          onClose={handleDrawerToggle}\n        >\n          <div className={classes.appResponsive}>\n            {leftLinks}\n            {rightLinks}\n          </div>\n        </Drawer>\n      </Hidden>\n    </AppBar>\n  );\n}\n\nHeader.defaultProp = {\n  color: \"white\"\n};\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"transparent\",\n    \"white\",\n    \"rose\",\n    \"dark\"\n  ]),\n  rightLinks: PropTypes.node,\n  leftLinks: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"danger\",\n      \"transparent\",\n      \"white\",\n      \"rose\",\n      \"dark\"\n    ]).isRequired\n  })\n};\n"]},"metadata":{},"sourceType":"module"}