{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\BookingHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport CircularLoading from \"../components/CircularLoading\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ConfirmationDialogRaw from '../components/ConfirmationDialogRaw';\nimport { features, dateStyle, language } from 'config';\nimport { FirebaseContext } from 'common';\n\nconst BookingHistory = () => {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    cancelBooking\n  } = api;\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [role, setRole] = useState(null);\n  const columns = [{\n    title: language.booking_id,\n    field: 'id'\n  }, {\n    title: language.booking_date,\n    field: 'tripdate',\n    render: rowData => rowData.tripdate ? new Date(rowData.tripdate).toLocaleString(dateStyle) : null\n  }, {\n    title: language.car_type,\n    field: 'carType'\n  }, {\n    title: language.customer_name,\n    field: 'customer_name'\n  }, {\n    title: language.pickup_address,\n    field: 'pickupAddress'\n  }, {\n    title: language.drop_address,\n    field: 'dropAddress'\n  }, {\n    title: language.assign_driver,\n    field: 'driver_name'\n  }, {\n    title: language.booking_status,\n    field: 'status',\n    render: rowData => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 77\n      }\n    }, language[rowData.status])\n  }, {\n    title: language.cancellation_reason,\n    field: 'reason'\n  }, {\n    title: language.otp,\n    field: 'otp'\n  }, {\n    title: language.trip_cost,\n    field: 'trip_cost'\n  }, {\n    title: language.trip_start_time,\n    field: 'trip_start_time'\n  }, {\n    title: language.trip_end_time,\n    field: 'trip_end_time'\n  }, {\n    title: language.total_time,\n    field: 'total_trip_time'\n  }, {\n    title: language.distance,\n    field: 'distance'\n  }, {\n    title: language.vehicle_no,\n    field: 'vehicle_number'\n  }, {\n    title: language.trip_cost_driver_share,\n    field: 'driver_share'\n  }, {\n    title: language.convenience_fee,\n    field: 'convenience_fees'\n  }, {\n    title: language.discount_ammount,\n    field: 'discount'\n  }, {\n    title: language.Customer_paid,\n    field: 'customer_paid'\n  }, {\n    title: language.payment_mode,\n    field: 'payment_mode'\n  }, {\n    title: language.payment_gateway,\n    field: 'gateway'\n  }, {\n    title: language.cash_payment_amount,\n    field: 'cashPaymentAmount'\n  }, {\n    title: language.card_payment_amount,\n    field: 'cardPaymentAmount'\n  }, {\n    title: language.wallet_payment_amount,\n    field: 'usedWalletMoney'\n  }];\n  const [data, setData] = useState([]);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [selectedBooking, setSelectedBooking] = useState('');\n  const bookinglistdata = useSelector(state => state.bookinglistdata);\n  useEffect(() => {\n    if (bookinglistdata.bookings) {\n      setData(bookinglistdata.bookings);\n    } else {\n      setData([]);\n    }\n  }, [bookinglistdata.bookings]);\n  useEffect(() => {\n    if (auth.info && auth.info.profile) {\n      setRole(auth.info.profile.usertype);\n    }\n  }, [auth.info]);\n\n  const onConfirmClose = value => {\n    if (value) {\n      dispatch(cancelBooking({\n        reason: value,\n        booking: selectedBooking\n      }));\n    }\n\n    setOpenConfirm(false);\n  };\n\n  return bookinglistdata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.booking_title,\n    columns: columns,\n    data: data,\n    options: {\n      actionsColumnIndex: -1,\n      exportButton: features.AllowCriticalEditsAdmin\n    },\n    actions: [rowData => ({\n      icon: 'cancel',\n      tooltip: language.cancel_booking,\n      disabled: rowData.status === 'NEW' || rowData.status === 'ACCEPTED' ? false : true,\n      onClick: (event, rowData) => {\n        if (features.AllowCriticalEditsAdmin && (role === 'rider' || role === 'admin')) {\n          setSelectedBooking(rowData);\n          setOpenConfirm(true);\n        } else {\n          alert(language.demo_mode);\n        }\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    open: openConfirm,\n    onClose: onConfirmClose,\n    value: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(BookingHistory, \"MSO8lSBrPJP0djP4QX/Oj8F0Ons=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = BookingHistory;\nexport default BookingHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingHistory\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/BookingHistory.js"],"names":["React","useState","useEffect","useContext","MaterialTable","CircularLoading","useSelector","useDispatch","ConfirmationDialogRaw","features","dateStyle","language","FirebaseContext","BookingHistory","api","cancelBooking","dispatch","auth","state","role","setRole","columns","title","booking_id","field","booking_date","render","rowData","tripdate","Date","toLocaleString","car_type","customer_name","pickup_address","drop_address","assign_driver","booking_status","status","cancellation_reason","otp","trip_cost","trip_start_time","trip_end_time","total_time","distance","vehicle_no","trip_cost_driver_share","convenience_fee","discount_ammount","Customer_paid","payment_mode","payment_gateway","cash_payment_amount","card_payment_amount","wallet_payment_amount","data","setData","openConfirm","setOpenConfirm","selectedBooking","setSelectedBooking","bookinglistdata","bookings","info","profile","usertype","onConfirmClose","value","reason","booking","loading","booking_title","actionsColumnIndex","exportButton","AllowCriticalEditsAdmin","icon","tooltip","cancel_booking","disabled","onClick","event","alert","demo_mode"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport CircularLoading from \"../components/CircularLoading\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ConfirmationDialogRaw from '../components/ConfirmationDialogRaw';\nimport { \n  features,\n  dateStyle,\n  language\n} from 'config';\nimport { FirebaseContext } from 'common';\n\nconst BookingHistory = () => {\n  const { api } = useContext(FirebaseContext);\n  const {\n    cancelBooking\n  } = api;\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [role, setRole] = useState(null);\n  \n  const columns =  [\n      { title: language.booking_id, field: 'id' },\n      { title: language.booking_date, field: 'tripdate', render: rowData => rowData.tripdate?new Date(rowData.tripdate).toLocaleString(dateStyle):null},\n      { title: language.car_type, field: 'carType' },\n      { title: language.customer_name,field: 'customer_name'},\n      { title: language.pickup_address, field: 'pickupAddress' },\n      { title: language.drop_address, field: 'dropAddress' },\n      { title: language.assign_driver, field: 'driver_name' },\n      { title: language.booking_status, field: 'status', render: rowData => <span>{language[rowData.status]}</span> },\n      { title: language.cancellation_reason, field: 'reason'},\n      { title: language.otp, field: 'otp'},\n      { title: language.trip_cost, field: 'trip_cost' },\n      { title: language.trip_start_time, field: 'trip_start_time' },\n      { title: language.trip_end_time, field: 'trip_end_time' },\n      { title: language.total_time, field: 'total_trip_time' },\n      { title: language.distance, field: 'distance' },\n      { title: language.vehicle_no, field: 'vehicle_number' },  \n      { title: language.trip_cost_driver_share, field: 'driver_share'},\n      { title: language.convenience_fee, field: 'convenience_fees'},\n      { title: language.discount_ammount, field: 'discount'},      \n      { title: language.Customer_paid, field: 'customer_paid'},\n      { title: language.payment_mode, field: 'payment_mode'},\n      { title: language.payment_gateway, field: 'gateway'},\n      { title: language.cash_payment_amount, field: 'cashPaymentAmount'},\n      { title: language.card_payment_amount, field: 'cardPaymentAmount'},\n      { title: language.wallet_payment_amount, field: 'usedWalletMoney'}\n  ];\n  const [data, setData] = useState([]);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [selectedBooking, setSelectedBooking] = useState('');\n  const bookinglistdata = useSelector(state => state.bookinglistdata);\n\n  useEffect(()=>{\n        if(bookinglistdata.bookings){\n            setData(bookinglistdata.bookings);\n        }else{\n          setData([]);\n        }\n  },[bookinglistdata.bookings]);\n\n  useEffect(() => {\n    if(auth.info && auth.info.profile){\n      setRole(auth.info.profile.usertype);\n    }\n  }, [auth.info]);\n\n  const onConfirmClose=(value)=>{\n    if(value){\n      dispatch(cancelBooking({\n        reason:value,\n        booking:selectedBooking\n      }));\n    }\n    setOpenConfirm(false);\n  }\n  \n  return (\n    bookinglistdata.loading? <CircularLoading/>:\n    <div>\n    <MaterialTable\n      title={language.booking_title}\n      columns={columns}\n      data={data}\n      options={{\n        actionsColumnIndex: -1,\n        exportButton: features.AllowCriticalEditsAdmin,\n      }}\n      actions={[\n        rowData => ({\n          icon: 'cancel',\n          tooltip: language.cancel_booking,\n          disabled: rowData.status==='NEW' || rowData.status==='ACCEPTED'? false:true,\n          onClick: (event, rowData) => {\n            if(features.AllowCriticalEditsAdmin && (role==='rider' || role ==='admin')){\n              setSelectedBooking(rowData);\n              setOpenConfirm(true);\n            }else{\n              alert(language.demo_mode);\n            }\n          }         \n        }),\n      ]}\n    />\n    <ConfirmationDialogRaw\n      open={openConfirm}\n      onClose={onConfirmClose}\n      value={''}\n    />\n    </div>\n\n  );\n}\n\nexport default BookingHistory;\n"]},"metadata":{},"sourceType":"module"}