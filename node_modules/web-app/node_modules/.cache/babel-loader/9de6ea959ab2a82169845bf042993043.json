{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\DriverEarning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { language } from 'config';\nexport default function DriverEarning() {\n  _s();\n\n  const columns = [{\n    title: language.year,\n    field: 'year'\n  }, {\n    title: language.months,\n    field: 'monthsName'\n  }, {\n    title: language.driver_name,\n    field: 'driverName'\n  }, {\n    title: language.vehicle_reg_no,\n    field: 'driverVehicleNo'\n  }, {\n    title: language.earning_amount,\n    field: 'driverShare'\n  }];\n  const [data, setData] = useState([]);\n  const driverearningdata = useSelector(state => state.driverearningdata);\n  useEffect(() => {\n    if (driverearningdata.driverearnings) {\n      setData(driverearningdata.driverearnings);\n    }\n  }, [driverearningdata.driverearnings]);\n  return driverearningdata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.driver_earning,\n    columns: columns,\n    data: data,\n    options: {\n      exportButton: true,\n      grouping: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(DriverEarning, \"Aa5QyVHqUWXvZ1euP/tGQIpBRfU=\", false, function () {\n  return [useSelector];\n});\n\n_c = DriverEarning;\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverEarning\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/DriverEarning.js"],"names":["React","useState","useEffect","MaterialTable","useSelector","CircularLoading","language","DriverEarning","columns","title","year","field","months","driver_name","vehicle_reg_no","earning_amount","data","setData","driverearningdata","state","driverearnings","loading","driver_earning","exportButton","grouping"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAEpC,QAAMC,OAAO,GAAI,CACb;AAAEC,IAAAA,KAAK,EAAEH,QAAQ,CAACI,IAAlB;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GADa,EAEb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACM,MAAlB;AAA0BD,IAAAA,KAAK,EAAE;AAAjC,GAFa,EAGb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACO,WAAlB;AAA+BF,IAAAA,KAAK,EAAE;AAAtC,GAHa,EAIb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACQ,cAAlB;AAAkCH,IAAAA,KAAK,EAAE;AAAzC,GAJa,EAKb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACS,cAAlB;AAAkCJ,IAAAA,KAAK,EAAE;AAAzC,GALa,CAAjB;AASF,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMiB,iBAAiB,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACD,iBAAhB,CAArC;AAEAhB,EAAAA,SAAS,CAAC,MAAI;AACR,QAAGgB,iBAAiB,CAACE,cAArB,EAAoC;AAChCH,MAAAA,OAAO,CAACC,iBAAiB,CAACE,cAAnB,CAAP;AACH;AACN,GAJQ,EAIP,CAACF,iBAAiB,CAACE,cAAnB,CAJO,CAAT;AAMA,SACEF,iBAAiB,CAACG,OAAlB,gBAA2B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,gBACA,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEf,QAAQ,CAACgB,cADlB;AAEE,IAAA,OAAO,EAAEd,OAFX;AAGE,IAAA,IAAI,EAAEQ,IAHR;AAKE,IAAA,OAAO,EAAE;AACPO,MAAAA,YAAY,EAAE,IADP;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAcD;;GAlCuBjB,a;UAYIH,W;;;KAZJG,a","sourcesContent":["import React,{ useState,useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { language } from 'config';\n\nexport default function DriverEarning() {\n\n    const columns =  [\n        { title: language.year,field: 'year'},\n        { title: language.months, field: 'monthsName' },\n        { title: language.driver_name, field: 'driverName'},\n        { title: language.vehicle_reg_no, field: 'driverVehicleNo' },\n        { title: language.earning_amount, field: 'driverShare' },\n        \n    ];\n\n  const [data, setData] = useState([]);\n  const driverearningdata = useSelector(state => state.driverearningdata);\n\n  useEffect(()=>{\n        if(driverearningdata.driverearnings){\n            setData(driverearningdata.driverearnings);\n        }\n  },[driverearningdata.driverearnings]);\n\n  return (\n    driverearningdata.loading? <CircularLoading/>:\n    <MaterialTable\n      title={language.driver_earning}\n      columns={columns}\n      data={data}\n      \n      options={{\n        exportButton: true,\n        grouping: true,\n      }}\n      \n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}