{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\Earningreports.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { language } from 'config';\nexport default function Earningreports() {\n  _s();\n\n  const columns = [{\n    title: language.year,\n    field: 'year'\n  }, {\n    title: language.months,\n    field: 'monthsName'\n  }, {\n    title: language.Gross_trip_cost,\n    field: 'tripCost'\n  }, {\n    title: language.trip_cost_driver_share,\n    field: 'rideCost'\n  }, {\n    title: language.convenience_fee,\n    field: 'convenienceFee'\n  }, {\n    title: language.Discounts,\n    field: 'discountAmount'\n  }, {\n    title: language.Profit,\n    field: 'profit',\n    render: rowData => rowData.convenienceFee - rowData.discountAmount,\n    editable: 'never'\n  }];\n  const [data, setData] = useState([]);\n  const earningreportsdata = useSelector(state => state.earningreportsdata);\n  useEffect(() => {\n    if (earningreportsdata.Earningreportss) {\n      setData(earningreportsdata.Earningreportss);\n    }\n  }, [earningreportsdata.Earningreportss]);\n  return earningreportsdata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.earning_reports,\n    columns: columns,\n    data: data,\n    options: {\n      exportButton: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Earningreports, \"X/4fOBqvuPC8E7G48NF2KL1w0Lw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Earningreports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earningreports\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/Earningreports.js"],"names":["React","useState","useEffect","MaterialTable","useSelector","CircularLoading","language","Earningreports","columns","title","year","field","months","Gross_trip_cost","trip_cost_driver_share","convenience_fee","Discounts","Profit","render","rowData","convenienceFee","discountAmount","editable","data","setData","earningreportsdata","state","Earningreportss","loading","earning_reports","exportButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAErC,QAAMC,OAAO,GAAI,CACb;AAAEC,IAAAA,KAAK,EAAEH,QAAQ,CAACI,IAAlB;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GADa,EAEb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACM,MAAlB;AAA0BD,IAAAA,KAAK,EAAE;AAAjC,GAFa,EAGb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACO,eAAlB;AAAmCF,IAAAA,KAAK,EAAE;AAA1C,GAHa,EAIb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACQ,sBAAlB;AAA0CH,IAAAA,KAAK,EAAE;AAAjD,GAJa,EAKb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACS,eAAlB;AAAmCJ,IAAAA,KAAK,EAAE;AAA1C,GALa,EAOb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACU,SAAlB;AAA6BL,IAAAA,KAAK,EAAE;AAApC,GAPa,EAQb;AAAEF,IAAAA,KAAK,EAAEH,QAAQ,CAACW,MAAlB;AAA2BN,IAAAA,KAAK,EAAE,QAAlC;AAA4CO,IAAAA,MAAM,EAAEC,OAAO,IAAIA,OAAO,CAACC,cAAR,GAAyBD,OAAO,CAACE,cAAhG;AAAiHC,IAAAA,QAAQ,EAAC;AAA1H,GARa,CAAjB;AAYF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMwB,kBAAkB,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACD,kBAAhB,CAAtC;AAEAvB,EAAAA,SAAS,CAAC,MAAI;AACR,QAAGuB,kBAAkB,CAACE,eAAtB,EAAsC;AAClCH,MAAAA,OAAO,CAACC,kBAAkB,CAACE,eAApB,CAAP;AACH;AACN,GAJQ,EAIP,CAACF,kBAAkB,CAACE,eAApB,CAJO,CAAT;AAMA,SACEF,kBAAkB,CAACG,OAAnB,gBAA4B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,gBACA,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEtB,QAAQ,CAACuB,eADlB;AAEE,IAAA,OAAO,EAAErB,OAFX;AAGE,IAAA,IAAI,EAAEe,IAHR;AAIE,IAAA,OAAO,EAAE;AACPO,MAAAA,YAAY,EAAE;AADP,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAYD;;GAnCuBvB,c;UAeKH,W;;;KAfLG,c","sourcesContent":["import React,{ useState,useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector} from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { language } from 'config';\n\nexport default function Earningreports() {\n\n    const columns =  [\n        { title: language.year,field: 'year'},\n        { title: language.months, field: 'monthsName' },\n        { title: language.Gross_trip_cost, field: 'tripCost' },\n        { title: language.trip_cost_driver_share, field: 'rideCost' },\n        { title: language.convenience_fee, field: 'convenienceFee' },\n        \n        { title: language.Discounts, field: 'discountAmount' },\n        { title: language.Profit,  field: 'profit', render: rowData => rowData.convenienceFee - rowData.discountAmount , editable:'never'},\n        \n    ];\n\n  const [data, setData] = useState([]);\n  const earningreportsdata = useSelector(state => state.earningreportsdata);\n\n  useEffect(()=>{\n        if(earningreportsdata.Earningreportss){\n            setData(earningreportsdata.Earningreportss);\n        }\n  },[earningreportsdata.Earningreportss]);\n\n  return (\n    earningreportsdata.loading? <CircularLoading/>:\n    <MaterialTable\n      title={language.earning_reports}\n      columns={columns}\n      data={data}\n      options={{\n        exportButton: true,\n      }}\n      \n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}