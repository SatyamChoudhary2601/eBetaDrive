{"ast":null,"code":"var _jsxFileName = \"D:\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\components\\\\CountrySelect.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { language, countries } from 'config'; // ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)) : isoCode;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n});\nexport default function CountrySelect(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"country-select-demo\",\n    style: {\n      width: '100%',\n      ...props.style\n    },\n    options: countries,\n    classes: {\n      option: classes.option\n    },\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    getOptionSelected: option => option.label,\n    renderOption: option => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, countryToFlag(option.code)), option.label, \" (\", option.code, \") +\", option.phone),\n    disabled: props.disabled,\n    onChange: props.onChange,\n    value: props.value,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: language.select_country,\n      variant: \"outlined\",\n      inputProps: { ...params.inputProps,\n        autoComplete: 'new-password' // disable autocomplete and autofill\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(CountrySelect, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CountrySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountrySelect\");","map":{"version":3,"sources":["D:/e beta react native/eBetaDrive/web-app/src/components/CountrySelect.js"],"names":["React","TextField","Autocomplete","makeStyles","language","countries","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","useStyles","option","fontSize","marginRight","CountrySelect","props","classes","width","style","label","code","phone","disabled","onChange","value","params","select_country","inputProps","autoComplete"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,QADF,EAEEC,SAFF,QAGO,QAHP,C,CAKA;AACA;;AACA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,SAAO,OAAOC,MAAM,CAACC,aAAd,KAAgC,WAAhC,GACHF,OAAO,CACJG,WADH,GAEGC,OAFH,CAEW,IAFX,EAEkBC,IAAD,IAAUJ,MAAM,CAACC,aAAP,CAAqBG,IAAI,CAACC,UAAL,CAAgB,CAAhB,IAAqB,MAA1C,CAF3B,CADG,GAIHN,OAJJ;AAKD;;AAED,MAAMO,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAEN,gBAAY;AACVC,MAAAA,WAAW,EAAE,EADH;AAEVD,MAAAA,QAAQ,EAAE;AAFA;AAFN;AADmB,CAAD,CAA5B;AAUA,eAAe,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,sBACE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,qBADL;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,MAAT;AAAgB,SAAGF,KAAK,CAACG;AAAzB,KAFT;AAGE,IAAA,OAAO,EAAEjB,SAHX;AAIE,IAAA,OAAO,EAAE;AACPU,MAAAA,MAAM,EAAEK,OAAO,CAACL;AADT,KAJX;AAOE,IAAA,aAAa,MAPf;AAQE,IAAA,cAAc,EAAGA,MAAD,IAAYA,MAAM,CAACQ,KARrC;AASE,IAAA,iBAAiB,EAAGR,MAAD,IAAYA,MAAM,CAACQ,KATxC;AAUE,IAAA,YAAY,EAAGR,MAAD,iBACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOT,aAAa,CAACS,MAAM,CAACS,IAAR,CAApB,CADF,EAEGT,MAAM,CAACQ,KAFV,QAEmBR,MAAM,CAACS,IAF1B,SAEmCT,MAAM,CAACU,KAF1C,CAXJ;AAgBE,IAAA,QAAQ,EAAEN,KAAK,CAACO,QAhBlB;AAiBE,IAAA,QAAQ,EAAEP,KAAK,CAACQ,QAjBlB;AAkBE,IAAA,KAAK,EAAER,KAAK,CAACS,KAlBf;AAmBE,IAAA,WAAW,EAAGC,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,KAAK,EAAEzB,QAAQ,CAAC0B,cAFlB;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,UAAU,EAAE,EACV,GAAGD,MAAM,CAACE,UADA;AAEVC,QAAAA,YAAY,EAAE,cAFJ,CAEoB;;AAFpB,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkCD;;GArCuBd,a;UACNJ,S;;;KADMI,a","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  language,\n  countries\n} from 'config';\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n        .toUpperCase()\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n});\n\nexport default function CountrySelect(props) {\n  const classes = useStyles();\n\n  return (\n    <Autocomplete\n      id=\"country-select-demo\"\n      style={{ width: '100%',...props.style }}\n      options={countries}\n      classes={{\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={(option) => option.label}\n      getOptionSelected={(option) => option.label}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.label} ({option.code}) +{option.phone}\n        </React.Fragment>\n      )}\n      disabled={props.disabled}\n      onChange={props.onChange}\n      value={props.value}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={language.select_country}\n          variant=\"outlined\"\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n          \n        />\n      )}\n    />         \n  );\n}\n"]},"metadata":{},"sourceType":"module"}