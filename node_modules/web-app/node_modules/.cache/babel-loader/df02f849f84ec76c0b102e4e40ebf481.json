{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\Withdraws.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport CircularLoading from \"../components/CircularLoading\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { language } from 'config';\nimport { FirebaseContext } from 'common';\n\nconst Withdraws = () => {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    completeWithdraw\n  } = api;\n  const dispatch = useDispatch();\n  const columns = [{\n    title: 'ID',\n    field: 'id',\n    editable: 'never'\n  }, {\n    title: language.requestDate,\n    field: 'date',\n    editable: 'never'\n  }, {\n    title: language.driver_name,\n    field: 'name',\n    editable: 'never'\n  }, {\n    title: language.amount,\n    field: 'amount',\n    editable: 'never'\n  }, {\n    title: language.processed,\n    field: 'processed',\n    type: 'boolean',\n    editable: 'never'\n  }, {\n    title: language.processDate,\n    field: 'procesDate',\n    editable: 'never'\n  }, {\n    title: language.bankName,\n    field: 'bankName',\n    editable: 'never'\n  }, {\n    title: language.bankCode,\n    field: 'bankCode',\n    editable: 'never'\n  }, {\n    title: language.bankAccount,\n    field: 'bankAccount',\n    editable: 'never'\n  }];\n  const [data, setData] = useState([]);\n  const withdrawdata = useSelector(state => state.withdrawdata);\n  useEffect(() => {\n    if (withdrawdata.withdraws) {\n      setData(withdrawdata.withdraws);\n    } else {\n      setData([]);\n    }\n  }, [withdrawdata.withdraws]);\n  return withdrawdata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.booking_title,\n    columns: columns,\n    data: data,\n    options: {\n      exportButton: true\n    },\n    actions: [rowData => ({\n      icon: 'check',\n      tooltip: language.process_withdraw,\n      disabled: rowData.processed,\n      onClick: (event, rowData) => {\n        dispatch(completeWithdraw(rowData));\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(Withdraws, \"GNN2EaKP8P+BNhFYP1wHT9fWC7k=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Withdraws;\nexport default Withdraws;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraws\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/Withdraws.js"],"names":["React","useState","useEffect","useContext","MaterialTable","CircularLoading","useSelector","useDispatch","language","FirebaseContext","Withdraws","api","completeWithdraw","dispatch","columns","title","field","editable","requestDate","driver_name","amount","processed","type","processDate","bankName","bankCode","bankAccount","data","setData","withdrawdata","state","withdraws","loading","booking_title","exportButton","rowData","icon","tooltip","process_withdraw","disabled","onClick","event"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport CircularLoading from \"../components/CircularLoading\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { language } from 'config';\nimport { FirebaseContext } from 'common';\n\nconst Withdraws = () => {\n  const { api } = useContext(FirebaseContext);\n  const {\n    completeWithdraw\n  } = api;\n  const dispatch = useDispatch();\n  const columns =  [\n      { title: 'ID', field: 'id',editable: 'never' },\n      { title: language.requestDate, field: 'date',editable: 'never' },\n      { title: language.driver_name,field: 'name',editable: 'never'},\n      { title: language.amount, field: 'amount',editable: 'never' },\n      { title: language.processed, field: 'processed', type: 'boolean',editable: 'never'},  \n      { title: language.processDate, field: 'procesDate',editable: 'never'}, \n      { title: language.bankName, field: 'bankName',editable: 'never' },\n      { title: language.bankCode, field: 'bankCode' ,editable: 'never'},\n      { title: language.bankAccount, field: 'bankAccount',editable: 'never' }, \n  ];\n  const [data, setData] = useState([]);\n  const withdrawdata = useSelector(state => state.withdrawdata);\n\n  useEffect(()=>{\n        if(withdrawdata.withdraws){\n            setData(withdrawdata.withdraws);\n        }else{\n          setData([]);\n        }\n  },[withdrawdata.withdraws]);\n  \n  return (\n    withdrawdata.loading? <CircularLoading/>:\n    <MaterialTable\n      title={language.booking_title}\n      columns={columns}\n      data={data}\n      options={{\n        exportButton: true\n      }}\n      actions={[\n        rowData => ({\n          icon: 'check',\n          tooltip: language.process_withdraw,\n          disabled: rowData.processed,\n          onClick: (event, rowData) => {\n            dispatch(completeWithdraw(rowData));\n          }         \n        }),\n      ]}\n    />\n  );\n}\n\nexport default Withdraws;\n"]},"metadata":{},"sourceType":"module"}