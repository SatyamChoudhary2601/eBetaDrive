{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport ResponsiveDrawer from '../components/ResponsiveDrawer';\nimport { features } from 'config';\n\nfunction matchUser(permit, usertype) {\n  let permitions = permit ? permit.split(',') : [];\n  let permitted = false;\n\n  for (let i = 0; i < permitions.length; i++) {\n    permitted = usertype === permitions[i] ? true : false;\n    if (permitted) break;\n  }\n\n  return permitted;\n}\n\nfunction ProtectedRoute({\n  component: Component,\n  permit,\n  ...rest\n}) {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => auth.info && auth.info.profile && matchUser(permit, auth.info.profile.usertype) ? /*#__PURE__*/React.createElement(ResponsiveDrawer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 31\n      }\n    }))) : features.WebsitePagesEnabled ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 69\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(ProtectedRoute, \"SvwR9yfdOSlAizXx+1ujAxpoAFQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/ProtectedRoute.js"],"names":["React","Route","Redirect","useSelector","ResponsiveDrawer","features","matchUser","permit","usertype","permitions","split","permitted","i","length","ProtectedRoute","component","Component","rest","auth","state","props","info","profile","WebsitePagesEnabled"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAoC;AAChC,MAAIC,UAAU,GAAGF,MAAM,GAAEA,MAAM,CAACG,KAAP,CAAa,GAAb,CAAF,GAAsB,EAA7C;AACA,MAAIC,SAAS,GAAG,KAAhB;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,UAAU,CAACI,MAAzB,EAAgCD,CAAC,EAAjC,EAAoC;AAChCD,IAAAA,SAAS,GAAGH,QAAQ,KAAKC,UAAU,CAACG,CAAD,CAAvB,GAA2B,IAA3B,GAAgC,KAA5C;AACA,QAAGD,SAAH,EAAc;AACjB;;AACD,SAAOA,SAAP;AACH;;AAED,SAASG,cAAT,CAAwB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBT,EAAAA,MAAxB;AAAgC,KAAGU;AAAnC,CAAxB,EAAmE;AAAA;;AAC/D,QAAMC,IAAI,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,sBACI,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,MAAM,EAAEG,KAAK,IAC1BF,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACG,IAAL,CAAUC,OAAvB,IAAkChB,SAAS,CAACC,MAAD,EAAQW,IAAI,CAACG,IAAL,CAAUC,OAAV,CAAkBd,QAA1B,CAA3C,gBACA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkB,oBAAC,SAAD,oBAAeY,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB,CADA,GAEEf,QAAQ,CAACkB,mBAAT,gBAA6B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,gBAAsD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAOH;;GATQT,c;UACQX,W;;;KADRW,c;AAWT,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport {Route,Redirect} from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport ResponsiveDrawer from '../components/ResponsiveDrawer';\nimport { features } from 'config';\n\nfunction matchUser(permit, usertype){\n    let permitions = permit? permit.split(',') : [];\n    let permitted = false;\n    for(let i=0;i<permitions.length;i++){\n        permitted = usertype === permitions[i]?true:false\n        if(permitted) break;\n    }\n    return permitted;\n}\n\nfunction ProtectedRoute({ component: Component, permit, ...rest }) {\n    const auth = useSelector(state => state.auth);\n    return(\n        <Route {...rest} render={props => (\n            auth.info && auth.info.profile && matchUser(permit,auth.info.profile.usertype)?\n            <ResponsiveDrawer><Component {...props} /></ResponsiveDrawer>\n            : features.WebsitePagesEnabled?<Redirect to=\"/login\" />:<Redirect to=\"/\" />\n        )} />\n    )\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}