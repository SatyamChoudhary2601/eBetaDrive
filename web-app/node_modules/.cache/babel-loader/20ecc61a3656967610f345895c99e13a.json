{"ast":null,"code":"var _jsxFileName = \"D:\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\FleetAdmins.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { features, dateStyle, language } from 'config';\nimport { FirebaseContext } from 'common';\nexport default function Users() {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    addUser,\n    editUser,\n    deleteUser,\n    checkUserExists\n  } = api;\n  const [data, setData] = useState([]);\n  const usersdata = useSelector(state => state.usersdata);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (usersdata.users) {\n      setData(usersdata.users.filter(user => user.usertype === 'fleetadmin'));\n    } else {\n      setData([]);\n    }\n  }, [usersdata.users]);\n  const columns = [{\n    title: language.createdAt,\n    field: 'createdAt',\n    editable: 'never',\n    defaultSort: 'desc',\n    render: rowData => rowData.createdAt ? new Date(rowData.createdAt).toLocaleString(dateStyle) : null\n  }, {\n    title: language.first_name,\n    field: 'firstName',\n    initialEditValue: ''\n  }, {\n    title: language.last_name,\n    field: 'lastName',\n    initialEditValue: ''\n  }, {\n    title: language.email,\n    field: 'email',\n    editable: 'onAdd',\n    render: rowData => features.AllowCriticalEditsAdmin ? rowData.email : \"Hidden for Demo\"\n  }, {\n    title: language.mobile,\n    field: 'mobile',\n    editable: 'onAdd',\n    render: rowData => features.AllowCriticalEditsAdmin ? rowData.mobile : \"Hidden for Demo\"\n  }, {\n    title: language.profile_image,\n    field: 'profile_image',\n    render: rowData => rowData.profile_image ? /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Profile\",\n      src: rowData.profile_image,\n      style: {\n        width: 50,\n        borderRadius: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 104\n      }\n    }) : null,\n    editable: 'never'\n  }, {\n    title: language.account_approve,\n    field: 'approved',\n    type: 'boolean',\n    initialEditValue: true\n  }];\n  return usersdata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.fleetadmins,\n    columns: columns,\n    data: data,\n    options: {\n      exportButton: features.AllowCriticalEditsAdmin,\n      sorting: true\n    },\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          checkUserExists(newData).then(res => {\n            if (res.users && res.users.length > 0) {\n              alert(language.user_exists);\n              reject();\n            } else if (res.error) {\n              alert(language.email_or_mobile_issue);\n              reject();\n            } else {\n              newData['createdByAdmin'] = true;\n              newData['usertype'] = 'fleetadmin';\n              newData['createdAt'] = new Date().toISOString();\n              newData['referralId'] = newData.firstName.toLowerCase() + Math.floor(1000 + Math.random() * 9000).toString();\n              dispatch(addUser(newData));\n              resolve();\n            }\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(editUser(oldData.id, newData));\n        }, 600);\n      }),\n      onRowDelete: oldData => features.AllowCriticalEditsAdmin ? new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(deleteUser(oldData.id));\n        }, 600);\n      }) : new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          alert(language.demo_mode);\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Users, \"J12jnbliIQz7hOfTaFVpeVJ+O5M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/e beta react native/eBetaDrive/web-app/src/views/FleetAdmins.js"],"names":["React","useState","useEffect","useContext","MaterialTable","useSelector","useDispatch","CircularLoading","features","dateStyle","language","FirebaseContext","Users","api","addUser","editUser","deleteUser","checkUserExists","data","setData","usersdata","state","dispatch","users","filter","user","usertype","columns","title","createdAt","field","editable","defaultSort","render","rowData","Date","toLocaleString","first_name","initialEditValue","last_name","email","AllowCriticalEditsAdmin","mobile","profile_image","width","borderRadius","account_approve","type","loading","fleetadmins","exportButton","sorting","onRowAdd","newData","Promise","resolve","reject","setTimeout","then","res","length","alert","user_exists","error","email_or_mobile_issue","toISOString","firstName","toLowerCase","Math","floor","random","toString","onRowUpdate","oldData","id","onRowDelete","demo_mode"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { \n  features ,\n  dateStyle,\n  language\n} from 'config';\nimport { FirebaseContext } from 'common';\n\nexport default function Users() {\n  const { api } = useContext(FirebaseContext);\n  const {\n    addUser,\n    editUser, \n    deleteUser,\n    checkUserExists\n  } = api;\n  const [data, setData] = useState([]);\n  const usersdata = useSelector(state => state.usersdata);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    if(usersdata.users){\n        setData(usersdata.users.filter(user => user.usertype ==='fleetadmin'));\n    }else{\n      setData([]);\n    }\n  },[usersdata.users]);\n\n  const columns = [\n    { title: language.createdAt, field: 'createdAt', editable:'never', defaultSort:'desc',render: rowData => rowData.createdAt?new Date(rowData.createdAt).toLocaleString(dateStyle):null},\n    { title: language.first_name, field: 'firstName', initialEditValue: '' },\n    { title: language.last_name, field: 'lastName', initialEditValue: '' },\n    { title: language.email, field: 'email', editable:'onAdd',render: rowData => features.AllowCriticalEditsAdmin ? rowData.email : \"Hidden for Demo\"},\n    { title: language.mobile, field: 'mobile', editable:'onAdd',render: rowData => features.AllowCriticalEditsAdmin ? rowData.mobile : \"Hidden for Demo\"},\n    { title: language.profile_image,  field: 'profile_image', render: rowData => rowData.profile_image?<img alt='Profile' src={rowData.profile_image} style={{width: 50,borderRadius:'50%'}}/>:null, editable:'never'},\n    { title: language.account_approve,  field: 'approved', type:'boolean', initialEditValue: true }\n  ];\n\n  return (\n    usersdata.loading? <CircularLoading/>:\n    <MaterialTable\n      title={language.fleetadmins}\n      columns={columns}\n      data={data}\n      options={{\n        exportButton: features.AllowCriticalEditsAdmin,\n        sorting: true,\n      }}\n      editable={{\n        onRowAdd: newData =>\n        new Promise((resolve,reject) => {\n          setTimeout(() => {\n            checkUserExists(newData).then((res) => {\n              if (res.users && res.users.length > 0) {\n                alert(language.user_exists);\n                reject();\n              }\n              else if(res.error){\n                alert(language.email_or_mobile_issue);\n                reject();\n              }\n              else{\n                newData['createdByAdmin'] = true;\n                newData['usertype'] = 'fleetadmin';\n                newData['createdAt'] = new Date().toISOString();\n                newData['referralId'] = newData.firstName.toLowerCase() + Math.floor(1000 + Math.random() * 9000).toString();\n                dispatch(addUser(newData));\n                resolve();\n              }\n            });\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              dispatch(editUser(oldData.id,newData));\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          features.AllowCriticalEditsAdmin?\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              dispatch(deleteUser(oldData.id));\n            }, 600);\n          })\n          :\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              alert(language.demo_mode);\n            }, 600);\n          })\n          , \n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}