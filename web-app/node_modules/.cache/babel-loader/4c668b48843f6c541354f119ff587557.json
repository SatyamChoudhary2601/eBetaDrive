{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport DashboardCard from '../components/DashboardCard';\nimport Map from '../components/Map';\nimport { useSelector } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { language } from \"config\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [mylocation, setMylocation] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [dailygross, setDailygross] = useState(0);\n  const [monthlygross, setMonthlygross] = useState(0);\n  const [totalgross, setTotalgross] = useState(0);\n  const [settings, setSettings] = useState({});\n  const usersdata = useSelector(state => state.usersdata);\n  const bookinglistdata = useSelector(state => state.bookinglistdata);\n  const settingsdata = useSelector(state => state.settingsdata);\n  const auth = useSelector(state => state.auth);\n  useEffect(() => {\n    if (mylocation == null) {\n      navigator.geolocation.getCurrentPosition(position => setMylocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }), err => console.log(err));\n    }\n  }, [mylocation]);\n  useEffect(() => {\n    if (settingsdata.settings) {\n      setSettings(settingsdata.settings);\n    }\n  }, [settingsdata.settings]);\n  useEffect(() => {\n    if (usersdata.users) {\n      const drivers = usersdata.users.filter(user => user.usertype === 'driver' && (user.fleetadmin === auth.info.uid && auth.info.profile.usertype === 'fleetadmin' || auth.info.profile.usertype === 'admin'));\n      let locs = [];\n\n      for (let i = 0; i < drivers.length; i++) {\n        if (drivers[i].approved && drivers[i].driverActiveStatus && drivers[i].location) {\n          locs.push({\n            id: i,\n            lat: drivers[i].location.lat,\n            lng: drivers[i].location.lng,\n            drivername: drivers[i].firstName + ' ' + drivers[i].lastName\n          });\n        }\n      }\n\n      setLocations(locs);\n    }\n  }, [usersdata.users, auth.info.profile, auth.info.uid]);\n  useEffect(() => {\n    if (bookinglistdata.bookings) {\n      let today = new Date();\n      let convenniencefees = 0;\n      let totconvenienceTrans = 0;\n      let todayConvenience = 0;\n\n      for (let i = 0; i < bookinglistdata.bookings.length; i++) {\n        if (bookinglistdata.bookings[i].status === 'PAID' || bookinglistdata.bookings[i].status === 'COMPLETE') {\n          const {\n            tripdate,\n            convenience_fees\n          } = bookinglistdata.bookings[i];\n          let tDate = new Date(tripdate);\n\n          if (convenience_fees > 0) {\n            if (tDate.getMonth() === today.getMonth() && tDate.getFullYear() === today.getFullYear()) {\n              convenniencefees = convenniencefees + parseFloat(convenience_fees);\n            }\n\n            if (tDate.getDate() === today.getDate() && tDate.getMonth() === today.getMonth()) {\n              todayConvenience = todayConvenience + parseFloat(convenience_fees);\n            }\n\n            totconvenienceTrans = totconvenienceTrans + parseFloat(convenience_fees);\n          }\n        }\n      }\n\n      setDailygross(parseFloat(todayConvenience).toFixed(2));\n      setMonthlygross(parseFloat(convenniencefees).toFixed(2));\n      setTotalgross(parseFloat(totconvenienceTrans).toFixed(2));\n    }\n  }, [bookinglistdata.bookings]);\n  return bookinglistdata.loading || usersdata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 56\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      margin: \"20px 0 0 15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, language.gross_earning), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DashboardCard, {\n    title: language.today_text,\n    image: require(\"../assets/img/money1.jpg\").default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, settings.symbol + ' ' + dailygross)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DashboardCard, {\n    title: language.this_month_text,\n    image: require(\"../assets/img/money2.jpg\").default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, settings.symbol + ' ' + monthlygross)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DashboardCard, {\n    title: language.total,\n    image: require(\"../assets/img/money3.jpg\").default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, settings.symbol + ' ' + totalgross))), mylocation ? /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      marginTop: '25px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      margin: \"20px 0 0 15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, language.real_time_driver_section_text), /*#__PURE__*/React.createElement(Map, {\n    mapcenter: mylocation,\n    locations: locations,\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `480px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `480px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 39\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `480px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      margin: \"20px 0 0 15px\",\n      color: '#FF0000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, language.allow_location));\n};\n\n_s(Dashboard, \"+UCIgJf3dChQ9JNQkGaZWHVS68A=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/Dashboard.js"],"names":["React","useState","useEffect","Grid","Paper","Typography","DashboardCard","Map","useSelector","CircularLoading","language","Dashboard","mylocation","setMylocation","locations","setLocations","dailygross","setDailygross","monthlygross","setMonthlygross","totalgross","setTotalgross","settings","setSettings","usersdata","state","bookinglistdata","settingsdata","auth","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","err","console","log","users","drivers","filter","user","usertype","fleetadmin","info","uid","profile","locs","i","length","approved","driverActiveStatus","location","push","id","drivername","firstName","lastName","bookings","today","Date","convenniencefees","totconvenienceTrans","todayConvenience","status","tripdate","convenience_fees","tDate","getMonth","getFullYear","parseFloat","getDate","toFixed","loading","margin","gross_earning","today_text","require","default","symbol","this_month_text","total","marginTop","real_time_driver_section_text","height","color","allow_location"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect } from 'react';\nimport {\n    Grid,\n    Paper,\n    Typography\n} from '@material-ui/core';\nimport DashboardCard from '../components/DashboardCard';\nimport Map from '../components/Map';\nimport { useSelector} from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { \n    language\n} from \"config\";\n\nconst Dashboard = () => {\n    const [mylocation, setMylocation] = useState(null);\n    const [locations, setLocations] = useState([]);\n    const [dailygross,setDailygross] = useState(0);\n    const [monthlygross,setMonthlygross] = useState(0);\n    const [totalgross,setTotalgross] = useState(0);\n\n    const [settings,setSettings] = useState({});\n\n    const usersdata = useSelector(state => state.usersdata);\n    const bookinglistdata = useSelector(state => state.bookinglistdata);\n    const settingsdata = useSelector(state => state.settingsdata);\n    const auth = useSelector(state => state.auth);\n\n    useEffect(()=>{\n        if(mylocation == null){\n            navigator.geolocation.getCurrentPosition(\n                position => setMylocation({ \n                    lat: position.coords.latitude, \n                    lng: position.coords.longitude\n                }), \n                err => console.log(err)\n            );\n        }\n    },[mylocation]);\n\n    useEffect(()=>{\n        if(settingsdata.settings){\n          setSettings(settingsdata.settings);\n        }\n    },[settingsdata.settings]);\n\n    useEffect(()=>{\n        if(usersdata.users){\n            const drivers = usersdata.users.filter(user => user.usertype ==='driver' && ((user.fleetadmin === auth.info.uid && auth.info.profile.usertype === 'fleetadmin')|| auth.info.profile.usertype === 'admin'));  \n            let locs = [];\n            for(let i=0;i<drivers.length;i++){\n                if(drivers[i].approved && drivers[i].driverActiveStatus && drivers[i].location){\n                    locs.push({\n                        id:i,\n                        lat:drivers[i].location.lat,\n                        lng:drivers[i].location.lng,\n                        drivername:drivers[i].firstName + ' ' + drivers[i].lastName\n                    });\n                }\n            }\n            setLocations(locs);\n        }\n    },[usersdata.users,auth.info.profile,auth.info.uid]);\n\n    useEffect(()=>{\n        if(bookinglistdata.bookings){\n            let today =  new Date();\n            let convenniencefees = 0;\n            let totconvenienceTrans = 0;\n            let todayConvenience = 0;\n            for(let i=0;i<bookinglistdata.bookings.length;i++){\n                if(bookinglistdata.bookings[i].status === 'PAID' || bookinglistdata.bookings[i].status === 'COMPLETE'){\n                    const {tripdate,convenience_fees} = bookinglistdata.bookings[i];\n                    let tDate = new Date(tripdate);\n                    if(convenience_fees>0){\n\n                        if(tDate.getMonth() === today.getMonth() && tDate.getFullYear() === today.getFullYear()){\n                            convenniencefees = convenniencefees + parseFloat(convenience_fees);\n                        }\n                        if(tDate.getDate() === today.getDate() && tDate.getMonth() === today.getMonth()){\n                            todayConvenience  = todayConvenience + parseFloat(convenience_fees);\n                        } \n                        totconvenienceTrans  = totconvenienceTrans + parseFloat(convenience_fees);\n                    }\n                }\n            }\n            setDailygross(parseFloat(todayConvenience).toFixed(2));\n            setMonthlygross(parseFloat(convenniencefees).toFixed(2));\n            setTotalgross(parseFloat(totconvenienceTrans).toFixed(2));\n        }\n    },[bookinglistdata.bookings]);\n    \n    return (\n        bookinglistdata.loading || usersdata.loading ? <CircularLoading/> :\n        <div>\n            <Typography variant=\"h4\" style={{margin:\"20px 0 0 15px\"}}>{language.gross_earning}</Typography>\n            <Grid container direction=\"row\" spacing={2}>\n                <Grid item xs>\n                    <DashboardCard title={language.today_text} image={require(\"../assets/img/money1.jpg\").default}>{ settings.symbol + ' ' + dailygross}</DashboardCard>\n                </Grid>\n                <Grid item xs>\n                    <DashboardCard title={language.this_month_text} image={require(\"../assets/img/money2.jpg\").default}>{ settings.symbol +' ' +  monthlygross}</DashboardCard>\n                </Grid>\n                <Grid item xs>\n                    <DashboardCard title={language.total} image={require(\"../assets/img/money3.jpg\").default}>{ settings.symbol +' ' +  totalgross}</DashboardCard>\n                </Grid>\n            </Grid>\n            { mylocation?\n            <Paper style={{marginTop:'25px'}}>\n                <Typography variant=\"h4\" style={{margin:\"20px 0 0 15px\"}}>{language.real_time_driver_section_text}</Typography>\n                <Map mapcenter={mylocation} locations={locations}\n                    loadingElement={<div style={{ height: `480px` }} />}\n                    containerElement={<div style={{ height: `480px` }} />}\n                    mapElement={<div style={{ height: `480px` }} />}\n                />\n            </Paper>\n            :\n            <Typography variant=\"h6\" style={{margin:\"20px 0 0 15px\",color:'#FF0000'}}>{language.allow_location}</Typography>\n            }\n        </div>\n        \n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}