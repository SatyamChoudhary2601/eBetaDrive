{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\Promos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport { features, dateStyle, language } from 'config';\nimport { FirebaseContext } from 'common';\nexport default function Promos() {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    editPromo\n  } = api;\n  const columns = [{\n    title: language.promo_name,\n    field: 'promo_name'\n  }, {\n    title: language.description,\n    field: 'promo_description'\n  }, {\n    title: language.title,\n    field: 'promo_discount_type',\n    lookup: {\n      flat: language.flat,\n      percentage: language.percentage\n    }\n  }, {\n    title: language.promo_discount_value,\n    field: 'promo_discount_value',\n    type: 'numeric'\n  }, {\n    title: language.max_limit,\n    field: 'max_promo_discount_value',\n    type: 'numeric'\n  }, {\n    title: language.min_limit,\n    field: 'min_order',\n    type: 'numeric'\n  }, {\n    title: language.end_date,\n    field: 'promo_validity',\n    render: rowData => rowData.promo_validity ? new Date(rowData.promo_validity).toLocaleDateString(dateStyle) : null\n  }, {\n    title: language.promo_usage,\n    field: 'promo_usage_limit',\n    type: 'numeric'\n  }, {\n    title: language.promo_used_by,\n    field: 'user_avail',\n    editable: 'never'\n  }];\n  const [data, setData] = useState([]);\n  const promodata = useSelector(state => state.promodata);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (promodata.promos) {\n      setData(promodata.promos);\n    } else {\n      setData([]);\n    }\n  }, [promodata.promos]);\n  return promodata.loading ? /*#__PURE__*/React.createElement(CircularLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(MaterialTable, {\n    title: language.promo_offer,\n    columns: columns,\n    data: data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          newData['createdAt'] = new Date().toISOString();\n          dispatch(editPromo(newData, \"Add\"));\n          resolve();\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => features.AllowCriticalEditsAdmin ? new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(editPromo(newData, \"Update\"));\n        }, 600);\n      }) : new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          alert(language.demo_mode);\n        }, 600);\n      }),\n      onRowDelete: oldData => features.AllowCriticalEditsAdmin ? new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          dispatch(editPromo(oldData, \"Delete\"));\n        }, 600);\n      }) : new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          alert(language.demo_mode);\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  });\n}\n\n_s(Promos, \"QKSS9FP8qFPIML4QZr66e3Yu/HY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Promos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Promos\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/Promos.js"],"names":["React","useState","useEffect","useContext","MaterialTable","useSelector","useDispatch","CircularLoading","features","dateStyle","language","FirebaseContext","Promos","api","editPromo","columns","title","promo_name","field","description","lookup","flat","percentage","promo_discount_value","type","max_limit","min_limit","end_date","render","rowData","promo_validity","Date","toLocaleDateString","promo_usage","promo_used_by","editable","data","setData","promodata","state","dispatch","promos","loading","promo_offer","onRowAdd","newData","Promise","resolve","setTimeout","toISOString","onRowUpdate","oldData","AllowCriticalEditsAdmin","alert","demo_mode","onRowDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport MaterialTable from 'material-table';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularLoading from \"../components/CircularLoading\";\nimport {\n  features,\n  dateStyle,\n  language\n} from 'config';\nimport { FirebaseContext } from 'common';\n\nexport default function Promos() {\n  const { api } = useContext(FirebaseContext);\n  const {\n    editPromo\n  } = api;\n\n  const columns = [\n    { title: language.promo_name, field: 'promo_name' },\n    { title: language.description, field: 'promo_description' },\n    {\n      title: language.title,\n      field: 'promo_discount_type',\n      lookup: { flat: language.flat, percentage: language.percentage },\n    },\n    { title: language.promo_discount_value, field: 'promo_discount_value', type: 'numeric' },\n    { title: language.max_limit, field: 'max_promo_discount_value', type: 'numeric' },\n    { title: language.min_limit, field: 'min_order', type: 'numeric' },\n    { title: language.end_date, field: 'promo_validity', render: rowData => rowData.promo_validity ? new Date(rowData.promo_validity).toLocaleDateString(dateStyle) : null },\n    { title: language.promo_usage, field: 'promo_usage_limit', type: 'numeric' },\n    { title: language.promo_used_by, field: 'user_avail', editable: 'never' }\n  ];\n\n  const [data, setData] = useState([]);\n  const promodata = useSelector(state => state.promodata);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (promodata.promos) {\n      setData(promodata.promos);\n    } else {\n      setData([]);\n    }\n  }, [promodata.promos]);\n\n  return (\n    promodata.loading ? <CircularLoading /> :\n      <MaterialTable\n        title={language.promo_offer}\n        columns={columns}\n        data={data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                  newData['createdAt'] = new Date().toISOString();\n                  dispatch(editPromo(newData,\"Add\"));\n                  resolve();\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            features.AllowCriticalEditsAdmin?\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                dispatch(editPromo(newData,\"Update\"));\n              }, 600);\n            })\n            :\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                alert(language.demo_mode);\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            features.AllowCriticalEditsAdmin?\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                dispatch(editPromo(oldData,\"Delete\"));\n              }, 600);\n            })\n            :\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                alert(language.demo_mode);\n              }, 600);\n            })\n        }}\n      />\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}