{"ast":null,"code":"var _jsxFileName = \"H:\\\\new\\\\e beta react native\\\\eBetaDrive\\\\web-app\\\\src\\\\views\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Email from \"@material-ui/icons/Email\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/background.jpg\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AlertDialog from '../components/AlertDialog';\nimport CountrySelect from '../components/CountrySelect';\nimport { language, default_country_code, features } from 'config';\nimport { FirebaseContext } from 'common';\nconst useStyles = makeStyles(styles);\nexport default function LoginPage(props) {\n  _s();\n\n  const {\n    api\n  } = useContext(FirebaseContext);\n  const {\n    clearLoginError,\n    emailSignUp,\n    checkUserExists,\n    validateReferer\n  } = api;\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const [state, setState] = React.useState({\n    email: '',\n    mobile: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    usertype: 'rider',\n    referralId: ''\n  });\n  const [commonAlert, setCommonAlert] = useState({\n    open: false,\n    msg: ''\n  });\n  const [countryCode, setCountryCode] = useState(default_country_code);\n  const [mobileWithoutCountry, setMobileWithoutCountry] = useState('');\n  const classes = useStyles();\n  const { ...rest\n  } = props;\n\n  const onInputChange = event => {\n    setState({ ...state,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const validateMobile = () => {\n    let mobileValid = true;\n\n    if (mobileWithoutCountry.length < 6) {\n      mobileValid = false;\n      setCommonAlert({\n        open: true,\n        msg: language.mobile_no_blank_error\n      });\n    }\n\n    if (mobileWithoutCountry.includes('+') || mobileWithoutCountry.includes(' ') || mobileWithoutCountry.includes('-')) {\n      mobileValid = false;\n      setCommonAlert({\n        open: true,\n        msg: language.mobile_no_blank_error\n      });\n    }\n\n    return mobileValid;\n  };\n\n  const validatePassword = complexity => {\n    let passwordValid = true;\n    const regx1 = /^([a-zA-Z0-9@*#]{8,15})$/;\n    const regx2 = /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/;\n\n    if (complexity === 'any') {\n      passwordValid = state.password.length >= 1;\n\n      if (!passwordValid) {\n        setCommonAlert({\n          open: true,\n          msg: language.password_blank_messege\n        });\n      }\n    } else if (complexity === 'alphanumeric') {\n      passwordValid = regx1.test(state.password);\n\n      if (!passwordValid) {\n        setCommonAlert({\n          open: true,\n          msg: language.password_alphaNumeric_check\n        });\n      }\n    } else if (complexity === 'complex') {\n      passwordValid = regx2.test(state.password);\n\n      if (!passwordValid) {\n        setCommonAlert({\n          open: true,\n          msg: language.password_complexity_check\n        });\n      }\n    }\n\n    return passwordValid;\n  };\n\n  const handleRegister = e => {\n    e.preventDefault(); //eslint-disable-next-line\n\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (state.firstName.length > 0 && state.lastName.length > 0) {\n      if (re.test(state.email)) {\n        if (validatePassword('alphanumeric')) {\n          if (validateMobile()) {\n            checkUserExists(state).then(res => {\n              if (res.users && res.users.length > 0) {\n                setCommonAlert({\n                  open: true,\n                  msg: language.user_exists\n                });\n              } else if (res.error) {\n                setCommonAlert({\n                  open: true,\n                  msg: language.email_or_mobile_issue\n                });\n              } else {\n                if (state.referralId && state.referralId.length > 0) {\n                  validateReferer(state.referralId).then(referralInfo => {\n                    if (referralInfo.uid) {\n                      emailSignUp({ ...state,\n                        signupViaReferral: referralInfo.uid\n                      }).then(res => {\n                        if (res.uid) {\n                          setCommonAlert({\n                            open: true,\n                            msg: language.account_create_successfully\n                          });\n                          setTimeout(() => {\n                            props.history.push('/login');\n                          }, 3000);\n                        } else {\n                          setCommonAlert({\n                            open: true,\n                            msg: language.reg_error\n                          });\n                        }\n                      });\n                    } else {\n                      setCommonAlert({\n                        open: true,\n                        msg: language.referer_not_found\n                      });\n                    }\n                  }).catch(error => {\n                    setCommonAlert({\n                      open: true,\n                      msg: language.referer_not_found\n                    });\n                  });\n                } else {\n                  emailSignUp(state).then(res => {\n                    if (res.uid) {\n                      setCommonAlert({\n                        open: true,\n                        msg: language.account_create_successfully\n                      });\n                      setTimeout(() => {\n                        props.history.push('/login');\n                      }, 3000);\n                    } else {\n                      setCommonAlert({\n                        open: true,\n                        msg: language.reg_error\n                      });\n                    }\n                  });\n                }\n              }\n            });\n          } else {\n            setCommonAlert({\n              open: true,\n              msg: language.mobile_no_blank_error\n            });\n          }\n        }\n      } else {\n        setCommonAlert({\n          open: true,\n          msg: language.proper_email\n        });\n      }\n    } else {\n      setCommonAlert({\n        open: true,\n        msg: language.proper_input_name\n      });\n    }\n  };\n\n  const handleCommonAlertClose = e => {\n    e.preventDefault();\n    setCommonAlert({\n      open: false,\n      msg: ''\n    });\n\n    if (auth.error.flag) {\n      dispatch(clearLoginError());\n    }\n  };\n\n  const handleBack = e => {\n    e.preventDefault();\n    props.history.push('/login');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    absolute: true,\n    color: \"transparent\",\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    })\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: \"url(\" + image + \")\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"top center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sign-in-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    square: true,\n    className: classes.root,\n    style: {\n      paddingTop: 20,\n      borderTopLeftRadius: 10,\n      borderTopRightRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: 0,\n    variant: \"fullWidth\",\n    indicatorColor: \"primary\",\n    textColor: \"inherit\",\n    \"aria-label\": \"switch login type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    disabled: true,\n    icon: /*#__PURE__*/React.createElement(EmailIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 50\n      }\n    }),\n    label: language.register_email,\n    \"aria-label\": \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: language.firstname,\n    id: \"firstName\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"text\",\n      required: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }\n      }))\n    },\n    onChange: onInputChange,\n    value: state.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput // LAST NAME\n  , {\n    labelText: language.lastname,\n    id: \"lastName\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"text\",\n      required: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }\n      }))\n    },\n    onChange: onInputChange,\n    value: state.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: language.email,\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"email\",\n      required: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 29\n        }\n      }))\n    },\n    onChange: onInputChange,\n    value: state.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: language.password,\n    id: \"password\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"password\",\n      required: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }\n      }, \"lock_outline\")),\n      autoComplete: \"off\"\n    },\n    onChange: onInputChange,\n    value: state.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }), features.AllowCountrySelection ?\n  /*#__PURE__*/\n  // COUNTRY\n  React.createElement(CountrySelect, {\n    value: countryCode,\n    onChange: (object, value) => {\n      setCountryCode(value);\n      let formattedNum = mobileWithoutCountry.replace(/ /g, '');\n      formattedNum = \"+\" + value.phone + formattedNum.replace(/-/g, '');\n      setState({ ...state,\n        mobile: formattedNum\n      });\n    },\n    style: {\n      paddingTop: 20\n    },\n    disabled: state.verificationId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }) : null, /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: language.phone,\n    id: \"mobile\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      required: true,\n      disabled: state.verificationId ? true : false,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(PhoneIcon, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }\n      }))\n    },\n    onChange: event => {\n      setMobileWithoutCountry(event.target.value);\n      let formattedNum = event.target.value.replace(/ /g, '');\n      formattedNum = \"+\" + countryCode.phone + formattedNum.replace(/-/g, '');\n      setState({ ...state,\n        mobile: formattedNum\n      });\n    },\n    value: mobileWithoutCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput // LAST NAME\n  , {\n    labelText: language.referralId,\n    id: \"referralId\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"text\",\n      required: true,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 29\n        }\n      }))\n    },\n    onChange: onInputChange,\n    value: state.referralId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CardFooter, {\n    className: classes.cardFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.normalButton,\n    simple: true,\n    color: \"primary\",\n    size: \"lg\",\n    onClick: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }, language.register), /*#__PURE__*/React.createElement(Button, {\n    className: classes.normalButton,\n    simple: true,\n    color: \"primary\",\n    size: \"lg\",\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }, language.back))))))), /*#__PURE__*/React.createElement(Footer, {\n    whiteFont: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AlertDialog, {\n    open: commonAlert.open,\n    onClose: handleCommonAlertClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }\n  }, commonAlert.msg)));\n}\n\n_s(LoginPage, \"L0mdGZ6jM1Y1MO4sIHTmgPcujDA=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["H:/new/e beta react native/eBetaDrive/web-app/src/views/RegisterPage.js"],"names":["React","useState","useContext","makeStyles","InputAdornment","Icon","Email","Header","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardFooter","CustomInput","styles","image","useSelector","useDispatch","Paper","Tabs","Tab","PhoneIcon","EmailIcon","AlertDialog","CountrySelect","language","default_country_code","features","FirebaseContext","useStyles","LoginPage","props","api","clearLoginError","emailSignUp","checkUserExists","validateReferer","auth","state","dispatch","setState","email","mobile","password","firstName","lastName","usertype","referralId","commonAlert","setCommonAlert","open","msg","countryCode","setCountryCode","mobileWithoutCountry","setMobileWithoutCountry","classes","rest","onInputChange","event","target","id","value","validateMobile","mobileValid","length","mobile_no_blank_error","includes","validatePassword","complexity","passwordValid","regx1","regx2","password_blank_messege","test","password_alphaNumeric_check","password_complexity_check","handleRegister","e","preventDefault","re","then","res","users","user_exists","error","email_or_mobile_issue","referralInfo","uid","signupViaReferral","account_create_successfully","setTimeout","history","push","reg_error","referer_not_found","catch","proper_email","proper_input_name","handleCommonAlertClose","flag","handleBack","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","root","paddingTop","borderTopLeftRadius","borderTopRightRadius","register_email","firstname","fullWidth","type","required","endAdornment","inputIconsColor","lastname","autoComplete","AllowCountrySelection","object","formattedNum","replace","phone","verificationId","disabled","cardFooter","normalButton","register","back"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Email from \"@material-ui/icons/Email\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/background.jpg\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AlertDialog from '../components/AlertDialog';\nimport CountrySelect from '../components/CountrySelect';\nimport {\n  language,\n  default_country_code,\n  features\n} from 'config';\nimport { FirebaseContext } from 'common';\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage(props) {\n  const { api } = useContext(FirebaseContext);\n  const {\n    clearLoginError,\n    emailSignUp,\n    checkUserExists,\n    validateReferer\n  } = api;\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const [state, setState] = React.useState({\n    email: '',\n    mobile: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    usertype: 'rider',\n    referralId: ''\n  });\n\n  const [commonAlert, setCommonAlert] = useState({ open: false, msg: '' });\n  const [countryCode, setCountryCode] = useState(default_country_code);\n  const [mobileWithoutCountry, setMobileWithoutCountry] = useState('');\n\n  const classes = useStyles();\n  const { ...rest } = props;\n\n  const onInputChange = (event) => {\n    setState({ ...state, [event.target.id]: event.target.value })\n  }\n\n  const validateMobile = () => {\n    let mobileValid = true;\n    if (mobileWithoutCountry.length < 6) {\n      mobileValid = false;\n      setCommonAlert({ open: true, msg: language.mobile_no_blank_error })\n    }\n    if(mobileWithoutCountry.includes('+') || mobileWithoutCountry.includes(' ') || mobileWithoutCountry.includes('-') ){\n      mobileValid = false;\n      setCommonAlert({ open: true, msg: language.mobile_no_blank_error })\n    }\n    return mobileValid;\n  }\n\n  const validatePassword = (complexity) => {\n    let passwordValid = true;\n    const regx1 = /^([a-zA-Z0-9@*#]{8,15})$/\n    const regx2 = /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/\n    if (complexity === 'any') {\n      passwordValid = state.password.length >= 1;\n      if (!passwordValid) {\n        setCommonAlert({ open: true, msg: language.password_blank_messege })\n      }\n    }\n    else if (complexity === 'alphanumeric') {\n      passwordValid = regx1.test(state.password);\n      if (!passwordValid) {\n        setCommonAlert({ open: true, msg: language.password_alphaNumeric_check })\n      }\n    }\n    else if (complexity === 'complex') {\n      passwordValid = regx2.test(state.password);\n      if (!passwordValid) {\n        setCommonAlert({ open: true, msg: language.password_complexity_check })\n      }\n    }\n    return passwordValid\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    //eslint-disable-next-line\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    if (state.firstName.length > 0 && state.lastName.length > 0) {\n      if (re.test(state.email)) {\n        if (validatePassword('alphanumeric')) {\n          if (validateMobile()) {\n            checkUserExists(state).then((res) => {\n              if (res.users && res.users.length > 0) {\n                setCommonAlert({ open: true, msg: language.user_exists })\n              }\n              else if(res.error){\n                setCommonAlert({ open: true, msg: language.email_or_mobile_issue })\n              }\n              else{\n                if (state.referralId && state.referralId.length > 0) {\n                  validateReferer(state.referralId).then((referralInfo) => {\n                    if (referralInfo.uid) {\n                      emailSignUp({...state, signupViaReferral: referralInfo.uid}).then((res)=>{\n                        if(res.uid){\n                          setCommonAlert({ open: true, msg: language.account_create_successfully });\n                          setTimeout(()=>{\n                            props.history.push('/login');\n                          },3000);\n                        }else{\n                          setCommonAlert({ open: true, msg: language.reg_error });\n                        }\n                      })\n                    } else {\n                      setCommonAlert({ open: true, msg: language.referer_not_found });\n                    }\n                  }).catch((error) => {\n                    setCommonAlert({ open: true, msg: language.referer_not_found });\n                  });\n                } else {\n                  emailSignUp(state).then((res)=>{\n                    if(res.uid){\n                      setCommonAlert({ open: true, msg: language.account_create_successfully });\n                      setTimeout(()=>{\n                        props.history.push('/login');\n                      },3000);\n                    }else{\n                      setCommonAlert({ open: true, msg: language.reg_error });\n                    }\n                  })\n                }\n              }\n            });\n          } else {\n            setCommonAlert({ open: true, msg: language.mobile_no_blank_error });\n          }\n        }\n      } else {\n        setCommonAlert({ open: true, msg: language.proper_email });\n      }\n    } else {\n      setCommonAlert({ open: true, msg: language.proper_input_name });\n\n    }\n  };\n\n  const handleCommonAlertClose = (e) => {\n    e.preventDefault();\n    setCommonAlert({ open: false, msg: '' });\n    if (auth.error.flag) {\n      dispatch(clearLoginError());\n    }\n  };\n\n  const handleBack = (e) => {\n    e.preventDefault();\n    props.history.push('/login');\n  };\n\n  return (\n    <div>\n      <Header\n        absolute\n        color=\"transparent\"\n        rightLinks={<HeaderLinks />}\n        {...rest}\n      />\n      <div\n        className={classes.pageHeader}\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\"\n        }}\n      >\n        <div id=\"sign-in-button\" />\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card>\n                <form className={classes.form}>\n\n                  <Paper square className={classes.root} style={{ paddingTop: 20, borderTopLeftRadius: 10, borderTopRightRadius: 10 }}>\n                    <Tabs\n                      value={0}\n                      variant=\"fullWidth\"\n                      indicatorColor=\"primary\"\n                      textColor=\"inherit\"\n                      aria-label=\"switch login type\"\n                    >\n                      <Tab disabled={true} icon={<EmailIcon />} label={language.register_email} aria-label=\"email\" />\n                    </Tabs>\n                  </Paper>\n\n                  <CardBody>\n                    <CustomInput\n                      labelText={language.firstname}\n                      id=\"firstName\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"text\",\n                        required: true,\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                      onChange={onInputChange}\n                      value={state.firstName}\n                    />\n                    <CustomInput    // LAST NAME\n                      labelText={language.lastname}\n                      id=\"lastName\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"text\",\n                        required: true,\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                      onChange={onInputChange}\n                      value={state.lastName}\n                    />\n                    <CustomInput\n                      labelText={language.email}\n                      id=\"email\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"email\",\n                        required: true,\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                      onChange={onInputChange}\n                      value={state.email}\n                    />\n                    <CustomInput\n                      labelText={language.password}\n                      id=\"password\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"password\",\n                        required: true,\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Icon className={classes.inputIconsColor}>\n                              lock_outline\n                            </Icon>\n                          </InputAdornment>\n                        ),\n                        autoComplete: \"off\"\n                      }}\n                      onChange={onInputChange}\n                      value={state.password}\n                    />\n                    {features.AllowCountrySelection ?   // COUNTRY\n                      <CountrySelect\n                        value={countryCode}\n                        onChange={\n                          (object, value) => {\n                            setCountryCode(value);\n                            let formattedNum = mobileWithoutCountry.replace(/ /g, '');\n                            formattedNum = \"+\" + value.phone + formattedNum.replace(/-/g, '');\n                            setState({ ...state, mobile: formattedNum })\n                          }\n                        }\n                        style={{ paddingTop: 20 }}\n                        disabled={state.verificationId ? true : false}\n                      />\n                      : null}\n                    <CustomInput\n                      labelText={language.phone}\n                      id=\"mobile\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        required: true,\n                        disabled: state.verificationId ? true : false,\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <PhoneIcon className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                      onChange={\n                        (event) => {\n                          setMobileWithoutCountry(event.target.value)\n                          let formattedNum = event.target.value.replace(/ /g, '');\n                          formattedNum = \"+\" + countryCode.phone + formattedNum.replace(/-/g, '');\n                          setState({ ...state, mobile: formattedNum })\n                        }\n                      }\n                      value={mobileWithoutCountry}\n                    />\n                    <CustomInput    // LAST NAME\n                      labelText={language.referralId}\n                      id=\"referralId\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"text\",\n                        required: true,\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                      onChange={onInputChange}\n                      value={state.referralId}\n                    />\n                  </CardBody>\n                  <CardFooter className={classes.cardFooter}>\n                    <Button className={classes.normalButton} simple color=\"primary\" size=\"lg\" onClick={handleRegister}>\n                      {language.register}\n                    </Button>\n                    <Button className={classes.normalButton} simple color=\"primary\" size=\"lg\" onClick={handleBack}>\n                      {language.back}\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n        <Footer whiteFont />\n        <AlertDialog open={commonAlert.open} onClose={handleCommonAlertClose}>{commonAlert.msg}</AlertDialog>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}